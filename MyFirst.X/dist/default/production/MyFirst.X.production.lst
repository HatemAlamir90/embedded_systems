

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Thu Dec 19 18:55:18 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F458
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    15  0000                     _INTCON	set	4082
    16  0000                     _INTCON2	set	4081
    17  0000                     _LATB	set	3978
    18  0000                     _PORTB	set	3969
    19  0000                     _T0CON	set	4053
    20  0000                     _TRISB	set	3987
    21                           
    22                           ; 0 bytes @ 0x2A
    23 ;;
    24 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    25 ;;
    26 ;; *************** function _main *****************
    27 ;; Defined at:
    28 ;;		line 15 in file "MyFirst.c"
    29 ;; Parameters:    Size  Location     Type
    30 ;;		None
    31 ;; Auto vars:     Size  Location     Type
    32 ;;		None
    33 ;; Return value:  Size  Location     Type
    34 ;;		None               void
    35 ;; Registers used:
    36 ;;		wreg, status,2
    37 ;; Tracked objects:
    38 ;;		On entry : 0/0
    39 ;;		On exit  : 0/0
    40 ;;		Unchanged: 0/0
    41 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    42 ;;      Params:         0       0       0       0       0       0       0
    43 ;;      Locals:         0       0       0       0       0       0       0
    44 ;;      Temps:          0       0       0       0       0       0       0
    45 ;;      Totals:         0       0       0       0       0       0       0
    46 ;;Total ram usage:        0 bytes
    47 ;; Hardware stack levels required when called:    4
    48 ;; This function calls:
    49 ;;		Nothing
    50 ;; This function is called by:
    51 ;;		Startup code after reset
    52 ;; This function uses a non-reentrant model
    53 ;;
    54                           
    55                           	psect	text0
    56  000402                     __ptext0:
    57                           	opt stack 0
    58  000402  FFFF               	dw	65535	; assembler added errata NOP
    59                           
    60                           ; #config settings
    61  000404                     _main:
    62                           	opt stack 27
    63                           
    64                           ;incstack = 0
    65  000404  FFFF               	dw	65535
    66                           
    67                           ;MyFirst.c: 16: INTCON = 0b11100000;
    68                           
    69                           ;incstack = 0
    70  000406  0EE0               	movlw	224
    71  000408  6EF2               	movwf	intcon,c	;volatile
    72                           
    73                           ;MyFirst.c: 17: INTCON2 = 0x00;
    74  00040A  0E00               	movlw	0
    75  00040C  6EF1               	movwf	intcon2,c	;volatile
    76                           
    77                           ;MyFirst.c: 18: T0CON=0b11001000;
    78  00040E  0EC8               	movlw	200
    79  000410  6ED5               	movwf	4053,c	;volatile
    80                           
    81                           ;MyFirst.c: 19: TRISB = 0x00;
    82  000412  0E00               	movlw	0
    83  000414  6E93               	movwf	3987,c	;volatile
    84  000416  FFFF               	dw	65535	; assembler added errata NOP
    85                           
    86                           ;MyFirst.c: 20: LATB=0x00;
    87  000418  0E00               	movlw	0
    88  00041A  6E8A               	movwf	3978,c	;volatile
    89                           
    90                           ;MyFirst.c: 21: PORTB=0x00;
    91  00041C  0E00               	movlw	0
    92  00041E  6E81               	movwf	3969,c	;volatile
    93                           
    94                           ;MyFirst.c: 22: while(1)
    95  000420  D7FA               	goto	L1
    96  000422                     __end_of_main:
    97                           	opt stack 0
    98  000422  FFFF               	dw	65535	; assembler added errata NOP
    99                           intcon	equ	0xFF2
   100                           intcon2	equ	0xFF1
   101                           
   102                           	psect	cinit
   103  000424                     __pcinit:
   104                           	opt stack 0
   105  000424                     start_initialization:
   106                           	opt stack 0
   107  000424                     __initialization:
   108                           	opt stack 0
   109                           
   110                           ; Clear objects allocated to COMRAM (4 bytes)
   111  000424  6A2E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   112  000426  6A2D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   113  000428  6A2C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   114  00042A  6A2B               	clrf	__pbssCOMRAM& (0+255),c
   115  00042C                     end_of_initialization:
   116                           	opt stack 0
   117  00042C                     __end_of__initialization:
   118                           	opt stack 0
   119  00042C  0100               	movlb	0
   120  00042E  EF02  F002         	goto	_main	;jump to C main() function
   121                           intcon	equ	0xFF2
   122                           intcon2	equ	0xFF1
   123                           
   124                           	psect	bssCOMRAM
   125  00002B                     __pbssCOMRAM:
   126                           	opt stack 0
   127  00002B                     _cnt:
   128                           	opt stack 0
   129  00002B                     	ds	4
   130                           intcon	equ	0xFF2
   131                           intcon2	equ	0xFF1
   132                           
   133                           	psect	cstackCOMRAM
   134  000001                     __pcstackCOMRAM:
   135                           	opt stack 0
   136  000001                     ?___flpack:
   137                           	opt stack 0
   138  000001                     ___flpack@arg:
   139                           	opt stack 0
   140                           
   141                           ; 4 bytes @ 0x0
   142  000001                     	ds	4
   143  000005                     ___flpack@exp:
   144                           	opt stack 0
   145                           
   146                           ; 1 bytes @ 0x4
   147  000005                     	ds	1
   148  000006                     ___flpack@sign:
   149                           	opt stack 0
   150                           
   151                           ; 1 bytes @ 0x5
   152  000006                     	ds	1
   153  000007                     ??___flpack:
   154                           
   155                           ; 0 bytes @ 0x6
   156  000007                     	ds	4
   157  00000B                     ?___fladd:
   158                           	opt stack 0
   159  00000B                     ___fladd@f1:
   160                           	opt stack 0
   161                           
   162                           ; 4 bytes @ 0xA
   163  00000B                     	ds	4
   164  00000F                     ___fladd@f2:
   165                           	opt stack 0
   166                           
   167                           ; 4 bytes @ 0xE
   168  00000F                     	ds	4
   169  000013                     ??___fladd:
   170                           
   171                           ; 0 bytes @ 0x12
   172  000013                     	ds	1
   173  000014                     ___fladd@sign:
   174                           	opt stack 0
   175                           
   176                           ; 1 bytes @ 0x13
   177  000014                     	ds	1
   178  000015                     ___fladd@exp2:
   179                           	opt stack 0
   180                           
   181                           ; 1 bytes @ 0x14
   182  000015                     	ds	1
   183  000016                     ___fladd@exp1:
   184                           	opt stack 0
   185                           
   186                           ; 1 bytes @ 0x15
   187  000016                     	ds	1
   188  000017                     ?___asfladd:
   189                           	opt stack 0
   190  000017                     ___asfladd@f1p:
   191                           	opt stack 0
   192                           
   193                           ; 2 bytes @ 0x16
   194  000017                     	ds	2
   195  000019                     ___asfladd@f2:
   196                           	opt stack 0
   197                           
   198                           ; 4 bytes @ 0x18
   199  000019                     	ds	4
   200  00001D                     ??_isr:
   201  00001D                     
   202                           ; 0 bytes @ 0x1C
   203  00001D                     	ds	14
   204  00002B                     intcon	equ	0xFF2
   205                           intcon2	equ	0xFF1
   206                           
   207 ;; *************** function _isr *****************
   208 ;; Defined at:
   209 ;;		line 7 in file "MyFirst.c"
   210 ;; Parameters:    Size  Location     Type
   211 ;;		None
   212 ;; Auto vars:     Size  Location     Type
   213 ;;		None
   214 ;; Return value:  Size  Location     Type
   215 ;;		None               void
   216 ;; Registers used:
   217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   218 ;; Tracked objects:
   219 ;;		On entry : 0/0
   220 ;;		On exit  : 0/0
   221 ;;		Unchanged: 0/0
   222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   223 ;;      Params:         0       0       0       0       0       0       0
   224 ;;      Locals:         0       0       0       0       0       0       0
   225 ;;      Temps:         14       0       0       0       0       0       0
   226 ;;      Totals:        14       0       0       0       0       0       0
   227 ;;Total ram usage:       14 bytes
   228 ;; Hardware stack levels used:    1
   229 ;; Hardware stack levels required when called:    3
   230 ;; This function calls:
   231 ;;		___asfladd
   232 ;; This function is called by:
   233 ;;		Interrupt level 2
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           	psect	intcode
   238  000008                     __pintcode:
   239                           	opt stack 0
   240  000008                     _isr:
   241                           	opt stack 27
   242                           
   243                           ;incstack = 0
   244  000008  FFFF               	dw	65535	; errata NOP
   245  00000A  CFFA F01D          	movff	pclath,??_isr
   246  00000E  CFFB F01E          	movff	pclatu,??_isr+1
   247  000012  CFE9 F01F          	movff	fsr0l,??_isr+2
   248  000016  CFEA F020          	movff	fsr0h,??_isr+3
   249  00001A  CFE1 F021          	movff	fsr1l,??_isr+4
   250  00001E  CFE2 F022          	movff	fsr1h,??_isr+5
   251  000022  CFD9 F023          	movff	fsr2l,??_isr+6
   252  000026  CFDA F024          	movff	fsr2h,??_isr+7
   253  00002A  CFF3 F025          	movff	prodl,??_isr+8
   254  00002E  CFF4 F026          	movff	prodh,??_isr+9
   255  000032  CFF6 F027          	movff	tblptrl,??_isr+10
   256  000036  CFF7 F028          	movff	tblptrh,??_isr+11
   257  00003A  CFF8 F029          	movff	tblptru,??_isr+12
   258  00003E  CFF5 F02A          	movff	tablat,??_isr+13
   259  000042                     
   260                           ;MyFirst.c: 8: if((INTCON & 0b00000100) != 0)
   261  000042  A4F2               	btfss	intcon,2,c	;volatile
   262  000044  D001               	goto	i2u27_41
   263  000046  D001               	goto	i2u27_40
   264  000048                     i2u27_41:
   265  000048  D010               	goto	i2l18
   266  00004A                     i2u27_40:
   267  00004A                     
   268                           ;MyFirst.c: 9: {
   269                           ;MyFirst.c: 10: cnt += 16.384;
   270  00004A  0E00               	movlw	high _cnt
   271  00004C  6E18               	movwf	?___asfladd+1,c
   272  00004E  0E2B               	movlw	low _cnt
   273  000050  6E17               	movwf	?___asfladd,c
   274  000052  0E6F               	movlw	111
   275  000054  6E19               	movwf	?___asfladd+2,c
   276  000056  0E12               	movlw	18
   277  000058  6E1A               	movwf	?___asfladd+3,c
   278  00005A  0E83               	movlw	131
   279  00005C  6E1B               	movwf	?___asfladd+4,c
   280  00005E  0E41               	movlw	65
   281  000060  6E1C               	movwf	?___asfladd+5,c
   282  000062  ECD9  F001         	call	___asfladd	;wreg free
   283  000066                     
   284                           ;MyFirst.c: 11: INTCON &= 0b11111011;
   285  000066  94F2               	bcf	intcon,2,c	;volatile
   286  000068  D000               	goto	i2l18
   287  00006A                     i2l18:
   288  00006A  C02A  FFF5         	movff	??_isr+13,tablat
   289  00006E  C029  FFF8         	movff	??_isr+12,tblptru
   290  000072  C028  FFF7         	movff	??_isr+11,tblptrh
   291  000076  C027  FFF6         	movff	??_isr+10,tblptrl
   292  00007A  C026  FFF4         	movff	??_isr+9,prodh
   293  00007E  C025  FFF3         	movff	??_isr+8,prodl
   294  000082  C024  FFDA         	movff	??_isr+7,fsr2h
   295  000086  C023  FFD9         	movff	??_isr+6,fsr2l
   296  00008A  C022  FFE2         	movff	??_isr+5,fsr1h
   297  00008E  C021  FFE1         	movff	??_isr+4,fsr1l
   298  000092  C020  FFEA         	movff	??_isr+3,fsr0h
   299  000096  C01F  FFE9         	movff	??_isr+2,fsr0l
   300  00009A  C01E  FFFB         	movff	??_isr+1,pclatu
   301  00009E  C01D  FFFA         	movff	??_isr,pclath
   302  0000A2  0011               	retfie		f
   303  0000A4  FFFF               	dw	65535	; errata NOP
   304  0000A6                     __end_of_isr:
   305                           	opt stack 0
   306                           pclatu	equ	0xFFB
   307                           pclath	equ	0xFFA
   308                           tblptru	equ	0xFF8
   309                           tblptrh	equ	0xFF7
   310                           tblptrl	equ	0xFF6
   311                           tablat	equ	0xFF5
   312                           prodh	equ	0xFF4
   313                           prodl	equ	0xFF3
   314                           intcon	equ	0xFF2
   315                           intcon2	equ	0xFF1
   316                           fsr0h	equ	0xFEA
   317                           fsr0l	equ	0xFE9
   318                           fsr1h	equ	0xFE2
   319                           fsr1l	equ	0xFE1
   320                           fsr2h	equ	0xFDA
   321                           fsr2l	equ	0xFD9
   322                           
   323 ;; *************** function ___asfladd *****************
   324 ;; Defined at:
   325 ;;		line 5 in file "/opt/microchip/xc8/v1.21/sources/pic18/asfladd.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;  f1p             2   22[COMRAM] PTR 
   328 ;;		 -> cnt(4), 
   329 ;;  f2              4   24[COMRAM] PTR 
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;                  4   22[COMRAM] PTR 
   334 ;; Registers used:
   335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   341 ;;      Params:         6       0       0       0       0       0       0
   342 ;;      Locals:         0       0       0       0       0       0       0
   343 ;;      Temps:          0       0       0       0       0       0       0
   344 ;;      Totals:         6       0       0       0       0       0       0
   345 ;;Total ram usage:        6 bytes
   346 ;; Hardware stack levels used:    1
   347 ;; Hardware stack levels required when called:    2
   348 ;; This function calls:
   349 ;;		___fladd
   350 ;; This function is called by:
   351 ;;		_isr
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text2
   356  0003B0                     __ptext2:
   357                           	opt stack 0
   358  0003B0  FFFF               	dw	65535	; assembler added errata NOP
   359  0003B2                     ___asfladd:
   360                           	opt stack 27
   361                           
   362                           ;incstack = 0
   363  0003B2  FFFF               	dw	65535
   364                           
   365                           ;	Return value of ___asfladd is never used
   366                           
   367                           ;incstack = 0
   368  0003B4  C017  FFD9         	movff	___asfladd@f1p,fsr2l
   369  0003B8  C018  FFDA         	movff	___asfladd@f1p+1,fsr2h
   370  0003BC  CFDE F00B          	movff	postinc2,?___fladd
   371  0003C0  CFDE F00C          	movff	postinc2,?___fladd+1
   372  0003C4  CFDE F00D          	movff	postinc2,?___fladd+2
   373  0003C8  CFDE F00E          	movff	postinc2,?___fladd+3
   374  0003CC  C019  F00F         	movff	___asfladd@f2,?___fladd+4
   375  0003D0  C01A  F010         	movff	___asfladd@f2+1,?___fladd+5
   376  0003D4  C01B  F011         	movff	___asfladd@f2+2,?___fladd+6
   377  0003D8  C01C  F012         	movff	___asfladd@f2+3,?___fladd+7
   378  0003DC  EC56  F000         	call	___fladd	;wreg free
   379  0003E0  C017  FFD9         	movff	___asfladd@f1p,fsr2l
   380  0003E4  C018  FFDA         	movff	___asfladd@f1p+1,fsr2h
   381  0003E8  C00B  FFDE         	movff	?___fladd,postinc2
   382  0003EC  C00C  FFDE         	movff	?___fladd+1,postinc2
   383  0003F0  C00D  FFDE         	movff	?___fladd+2,postinc2
   384  0003F4  C00E  FFDD         	movff	?___fladd+3,postdec2
   385  0003F8  06D9               	decf	fsr2l,f,c
   386  0003FA  06D9               	decf	fsr2l,f,c
   387  0003FC  0012               	return	
   388  0003FE  FFFF               	dw	65535	; errata NOP
   389  000400                     __end_of___asfladd:
   390                           	opt stack 0
   391  000400  FFFF               	dw	65535	; assembler added errata NOP
   392                           pclatu	equ	0xFFB
   393                           pclath	equ	0xFFA
   394                           tblptru	equ	0xFF8
   395                           tblptrh	equ	0xFF7
   396                           tblptrl	equ	0xFF6
   397                           tablat	equ	0xFF5
   398                           prodh	equ	0xFF4
   399                           prodl	equ	0xFF3
   400                           intcon	equ	0xFF2
   401                           intcon2	equ	0xFF1
   402                           fsr0h	equ	0xFEA
   403                           fsr0l	equ	0xFE9
   404                           fsr1h	equ	0xFE2
   405                           fsr1l	equ	0xFE1
   406                           postinc2	equ	0xFDE
   407                           postdec2	equ	0xFDD
   408                           fsr2h	equ	0xFDA
   409                           fsr2l	equ	0xFD9
   410                           
   411 ;; *************** function ___fladd *****************
   412 ;; Defined at:
   413 ;;		line 89 in file "/opt/microchip/xc8/v1.21/sources/common/fladd.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;  f1              4   10[COMRAM] PTR 
   416 ;;  f2              4   14[COMRAM] PTR 
   417 ;; Auto vars:     Size  Location     Type
   418 ;;  exp1            1   21[COMRAM] unsigned char 
   419 ;;  exp2            1   20[COMRAM] unsigned char 
   420 ;;  sign            1   19[COMRAM] unsigned char 
   421 ;; Return value:  Size  Location     Type
   422 ;;                  4   10[COMRAM] unsigned char 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   430 ;;      Params:         8       0       0       0       0       0       0
   431 ;;      Locals:         3       0       0       0       0       0       0
   432 ;;      Temps:          1       0       0       0       0       0       0
   433 ;;      Totals:        12       0       0       0       0       0       0
   434 ;;Total ram usage:       12 bytes
   435 ;; Hardware stack levels used:    1
   436 ;; Hardware stack levels required when called:    1
   437 ;; This function calls:
   438 ;;		___flpack
   439 ;; This function is called by:
   440 ;;		___asfladd
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text3
   445  0000AA                     __ptext3:
   446                           	opt stack 0
   447  0000AA  FFFF               	dw	65535	; assembler added errata NOP
   448  0000AC                     ___fladd:
   449                           	opt stack 27
   450                           
   451                           ;incstack = 0
   452  0000AC  FFFF               	dw	65535
   453                           
   454                           ;incstack = 0
   455  0000AE  340D               	rlcf	(___fladd@f1+2)& (0+255),w,c
   456  0000B0  340E               	rlcf	(___fladd@f1+3)& (0+255),w,c
   457  0000B2  6E16               	movwf	___fladd@exp1,c
   458  0000B4  3411               	rlcf	(___fladd@f2+2)& (0+255),w,c
   459  0000B6  3412               	rlcf	(___fladd@f2+3)& (0+255),w,c
   460  0000B8  6E15               	movwf	___fladd@exp2,c
   461  0000BA  5016               	movf	___fladd@exp1,w,c
   462  0000BC  B4D8               	btfsc	status,2,c
   463  0000BE  D00B               	goto	i2l254
   464  0000C0  5015               	movf	___fladd@exp2,w,c
   465  0000C2  6016               	cpfslt	___fladd@exp1,c
   466  0000C4  D012               	goto	i2l664
   467  0000C6  5016               	movf	___fladd@exp1,w,c
   468  0000C8  0800               	sublw	0
   469  0000CA  2415               	addwf	___fladd@exp2,w,c
   470  0000CC  6E13               	movwf	??___fladd& (0+255),c
   471  0000CE  0E21               	movlw	33
   472  0000D0  5C13               	subwf	??___fladd,w,c
   473  0000D2  A0D8               	btfss	status,0,c
   474  0000D4  D00A               	goto	i2l664
   475  0000D6                     i2l254:
   476  0000D6  FFFF               	dw	65535	; assembler added errata NOP
   477  0000D8  C00F  F00B         	movff	___fladd@f2,?___fladd
   478  0000DC  C010  F00C         	movff	___fladd@f2+1,?___fladd+1
   479  0000E0  C011  F00D         	movff	___fladd@f2+2,?___fladd+2
   480  0000E4  C012  F00E         	movff	___fladd@f2+3,?___fladd+3
   481  0000E8  D0D4               	goto	i2l255
   482  0000EA                     i2l664:
   483  0000EA  FFFF               	dw	65535	; assembler added errata NOP
   484  0000EC  5015               	movf	___fladd@exp2,w,c
   485  0000EE  B4D8               	btfsc	status,2,c
   486  0000F0  D00B               	goto	i2l258
   487  0000F2  5016               	movf	___fladd@exp1,w,c
   488  0000F4  6015               	cpfslt	___fladd@exp2,c
   489  0000F6  D012               	goto	i2l670
   490  0000F8  5015               	movf	___fladd@exp2,w,c
   491  0000FA  0800               	sublw	0
   492  0000FC  2416               	addwf	___fladd@exp1,w,c
   493  0000FE  6E13               	movwf	??___fladd& (0+255),c
   494  000100  0E21               	movlw	33
   495  000102  5C13               	subwf	??___fladd,w,c
   496  000104  A0D8               	btfss	status,0,c
   497  000106  D00A               	goto	i2l670
   498  000108                     i2l258:
   499  000108  FFFF               	dw	65535	; assembler added errata NOP
   500  00010A  C00B  F00B         	movff	___fladd@f1,?___fladd
   501  00010E  C00C  F00C         	movff	___fladd@f1+1,?___fladd+1
   502  000112  C00D  F00D         	movff	___fladd@f1+2,?___fladd+2
   503  000116  C00E  F00E         	movff	___fladd@f1+3,?___fladd+3
   504  00011A  D0BB               	goto	i2l255
   505  00011C                     i2l670:
   506  00011C  FFFF               	dw	65535	; assembler added errata NOP
   507  00011E  6E13               	movwf	??___fladd& (0+255),c
   508  000120  0E06               	movlw	6
   509  000122  6E14               	movwf	___fladd@sign,c
   510  000124  5013               	movf	??___fladd& (0+255),w,c
   511  000126  BE0E               	btfsc	___fladd@f1+3,7,c
   512  000128  8E14               	bsf	___fladd@sign,7,c
   513  00012A  BE12               	btfsc	___fladd@f2+3,7,c
   514  00012C  8C14               	bsf	___fladd@sign,6,c
   515  00012E  8E0D               	bsf	___fladd@f1+2,7,c
   516  000130  0EFF               	movlw	255
   517  000132  160B               	andwf	___fladd@f1,f,c
   518  000134  0EFF               	movlw	255
   519  000136  160C               	andwf	___fladd@f1+1,f,c
   520  000138  0EFF               	movlw	255
   521  00013A  160D               	andwf	___fladd@f1+2,f,c
   522  00013C  0E00               	movlw	0
   523  00013E  160E               	andwf	___fladd@f1+3,f,c
   524  000140  8E11               	bsf	___fladd@f2+2,7,c
   525  000142  0EFF               	movlw	255
   526  000144  160F               	andwf	___fladd@f2,f,c
   527  000146  0EFF               	movlw	255
   528  000148  1610               	andwf	___fladd@f2+1,f,c
   529  00014A  0EFF               	movlw	255
   530  00014C  1611               	andwf	___fladd@f2+2,f,c
   531  00014E  0E00               	movlw	0
   532  000150  1612               	andwf	___fladd@f2+3,f,c
   533  000152  5015               	movf	___fladd@exp2,w,c
   534  000154  6016               	cpfslt	___fladd@exp1,c
   535  000156  D01D               	goto	i2l696
   536  000158                     i2l686:
   537  000158  FFFF               	dw	65535	; assembler added errata NOP
   538  00015A  90D8               	bcf	status,0,c
   539  00015C  360F               	rlcf	___fladd@f2,f,c
   540  00015E  3610               	rlcf	___fladd@f2+1,f,c
   541  000160  3611               	rlcf	___fladd@f2+2,f,c
   542  000162  3612               	rlcf	___fladd@f2+3,f,c
   543  000164  0615               	decf	___fladd@exp2,f,c
   544  000166  5015               	movf	___fladd@exp2,w,c
   545  000168  1816               	xorwf	___fladd@exp1,w,c
   546  00016A  B4D8               	btfsc	status,2,c
   547  00016C  D00D               	goto	i2l694
   548  00016E  0614               	decf	___fladd@sign,f,c
   549  000170  5014               	movf	___fladd@sign& (0+255),w,c
   550  000172  0B07               	andlw	7
   551  000174  B4D8               	btfsc	status,2,c
   552  000176  D008               	goto	i2l694
   553  000178  D7EF               	goto	i2l686
   554  00017A                     i2l692:
   555  00017A  FFFF               	dw	65535	; assembler added errata NOP
   556  00017C  90D8               	bcf	status,0,c
   557  00017E  320E               	rrcf	___fladd@f1+3,f,c
   558  000180  320D               	rrcf	___fladd@f1+2,f,c
   559  000182  320C               	rrcf	___fladd@f1+1,f,c
   560  000184  320B               	rrcf	___fladd@f1,f,c
   561  000186  2A16               	incf	___fladd@exp1,f,c
   562  000188                     i2l694:
   563  000188  FFFF               	dw	65535	; assembler added errata NOP
   564  00018A  5015               	movf	___fladd@exp2,w,c
   565  00018C  6216               	cpfseq	___fladd@exp1,c
   566  00018E  D7F5               	goto	i2l692
   567  000190  D020               	goto	i2l269
   568  000192                     i2l696:
   569  000192  FFFF               	dw	65535	; assembler added errata NOP
   570  000194  5016               	movf	___fladd@exp1,w,c
   571  000196  6015               	cpfslt	___fladd@exp2,c
   572  000198  D01C               	goto	i2l269
   573  00019A                     i2l698:
   574  00019A  FFFF               	dw	65535	; assembler added errata NOP
   575  00019C  90D8               	bcf	status,0,c
   576  00019E  360B               	rlcf	___fladd@f1,f,c
   577  0001A0  360C               	rlcf	___fladd@f1+1,f,c
   578  0001A2  360D               	rlcf	___fladd@f1+2,f,c
   579  0001A4  360E               	rlcf	___fladd@f1+3,f,c
   580  0001A6  0616               	decf	___fladd@exp1,f,c
   581  0001A8  5015               	movf	___fladd@exp2,w,c
   582  0001AA  1816               	xorwf	___fladd@exp1,w,c
   583  0001AC  B4D8               	btfsc	status,2,c
   584  0001AE  D00D               	goto	i2l706
   585  0001B0  0614               	decf	___fladd@sign,f,c
   586  0001B2  5014               	movf	___fladd@sign& (0+255),w,c
   587  0001B4  0B07               	andlw	7
   588  0001B6  B4D8               	btfsc	status,2,c
   589  0001B8  D008               	goto	i2l706
   590  0001BA  D7EF               	goto	i2l698
   591  0001BC                     i2l704:
   592  0001BC  FFFF               	dw	65535	; assembler added errata NOP
   593  0001BE  90D8               	bcf	status,0,c
   594  0001C0  3212               	rrcf	___fladd@f2+3,f,c
   595  0001C2  3211               	rrcf	___fladd@f2+2,f,c
   596  0001C4  3210               	rrcf	___fladd@f2+1,f,c
   597  0001C6  320F               	rrcf	___fladd@f2,f,c
   598  0001C8  2A15               	incf	___fladd@exp2,f,c
   599  0001CA                     i2l706:
   600  0001CA  FFFF               	dw	65535	; assembler added errata NOP
   601  0001CC  5015               	movf	___fladd@exp2,w,c
   602  0001CE  6216               	cpfseq	___fladd@exp1,c
   603  0001D0  D7F5               	goto	i2l704
   604  0001D2                     i2l269:
   605  0001D2  FFFF               	dw	65535	; assembler added errata NOP
   606  0001D4  AE14               	btfss	___fladd@sign,7,c
   607  0001D6  D010               	goto	i2l710
   608  0001D8  0EFF               	movlw	255
   609  0001DA  1A0B               	xorwf	___fladd@f1,f,c
   610  0001DC  0EFF               	movlw	255
   611  0001DE  1A0C               	xorwf	___fladd@f1+1,f,c
   612  0001E0  0EFF               	movlw	255
   613  0001E2  1A0D               	xorwf	___fladd@f1+2,f,c
   614  0001E4  0EFF               	movlw	255
   615  0001E6  1A0E               	xorwf	___fladd@f1+3,f,c
   616  0001E8  0E01               	movlw	1
   617  0001EA  260B               	addwf	___fladd@f1,f,c
   618  0001EC  0E00               	movlw	0
   619  0001EE  220C               	addwfc	___fladd@f1+1,f,c
   620  0001F0  0E00               	movlw	0
   621  0001F2  220D               	addwfc	___fladd@f1+2,f,c
   622  0001F4  0E00               	movlw	0
   623  0001F6  220E               	addwfc	___fladd@f1+3,f,c
   624  0001F8                     i2l710:
   625  0001F8  FFFF               	dw	65535	; assembler added errata NOP
   626  0001FA  AC14               	btfss	___fladd@sign,6,c
   627  0001FC  D010               	goto	i2l714
   628  0001FE  0EFF               	movlw	255
   629  000200  1A0F               	xorwf	___fladd@f2,f,c
   630  000202  0EFF               	movlw	255
   631  000204  1A10               	xorwf	___fladd@f2+1,f,c
   632  000206  0EFF               	movlw	255
   633  000208  1A11               	xorwf	___fladd@f2+2,f,c
   634  00020A  0EFF               	movlw	255
   635  00020C  1A12               	xorwf	___fladd@f2+3,f,c
   636  00020E  0E01               	movlw	1
   637  000210  260F               	addwf	___fladd@f2,f,c
   638  000212  0E00               	movlw	0
   639  000214  2210               	addwfc	___fladd@f2+1,f,c
   640  000216  0E00               	movlw	0
   641  000218  2211               	addwfc	___fladd@f2+2,f,c
   642  00021A  0E00               	movlw	0
   643  00021C  2212               	addwfc	___fladd@f2+3,f,c
   644  00021E                     i2l714:
   645  00021E  FFFF               	dw	65535	; assembler added errata NOP
   646  000220  6E13               	movwf	??___fladd& (0+255),c
   647  000222  0E00               	movlw	0
   648  000224  6E14               	movwf	___fladd@sign,c
   649  000226  5013               	movf	??___fladd& (0+255),w,c
   650  000228  500B               	movf	___fladd@f1,w,c
   651  00022A  260F               	addwf	___fladd@f2,f,c
   652  00022C  500C               	movf	___fladd@f1+1,w,c
   653  00022E  2210               	addwfc	___fladd@f2+1,f,c
   654  000230  500D               	movf	___fladd@f1+2,w,c
   655  000232  2211               	addwfc	___fladd@f2+2,f,c
   656  000234  500E               	movf	___fladd@f1+3,w,c
   657  000236  2212               	addwfc	___fladd@f2+3,f,c
   658  000238  AE12               	btfss	___fladd@f2+3,7,c
   659  00023A  D014               	goto	i2l724
   660  00023C  0EFF               	movlw	255
   661  00023E  1A0F               	xorwf	___fladd@f2,f,c
   662  000240  0EFF               	movlw	255
   663  000242  1A10               	xorwf	___fladd@f2+1,f,c
   664  000244  0EFF               	movlw	255
   665  000246  1A11               	xorwf	___fladd@f2+2,f,c
   666  000248  0EFF               	movlw	255
   667  00024A  1A12               	xorwf	___fladd@f2+3,f,c
   668  00024C  0E01               	movlw	1
   669  00024E  260F               	addwf	___fladd@f2,f,c
   670  000250  0E00               	movlw	0
   671  000252  2210               	addwfc	___fladd@f2+1,f,c
   672  000254  0E00               	movlw	0
   673  000256  2211               	addwfc	___fladd@f2+2,f,c
   674  000258  0E00               	movlw	0
   675  00025A  2212               	addwfc	___fladd@f2+3,f,c
   676  00025C  6E13               	movwf	??___fladd& (0+255),c
   677  00025E  0E01               	movlw	1
   678  000260  6E14               	movwf	___fladd@sign,c
   679  000262  5013               	movf	??___fladd& (0+255),w,c
   680  000264                     i2l724:
   681  000264  FFFF               	dw	65535	; assembler added errata NOP
   682  000266  C00F  F001         	movff	___fladd@f2,?___flpack
   683  00026A  C010  F002         	movff	___fladd@f2+1,?___flpack+1
   684  00026E  C011  F003         	movff	___fladd@f2+2,?___flpack+2
   685  000272  C012  F004         	movff	___fladd@f2+3,?___flpack+3
   686  000276  C016  F005         	movff	___fladd@exp1,?___flpack+4
   687  00027A  C014  F006         	movff	___fladd@sign,?___flpack+5
   688  00027E  EC4E  F001         	call	___flpack	;wreg free
   689  000282  C004  F00E         	movff	?___flpack+3,?___fladd+3
   690  000286  C003  F00D         	movff	?___flpack+2,?___fladd+2
   691  00028A  C002  F00C         	movff	?___flpack+1,?___fladd+1
   692  00028E  C001  F00B         	movff	?___flpack,?___fladd
   693  000292                     i2l255:
   694  000292  FFFF               	dw	65535	; assembler added errata NOP
   695  000294  0012               	return	
   696  000296  FFFF               	dw	65535	; errata NOP
   697  000298                     __end_of___fladd:
   698                           	opt stack 0
   699  000298  FFFF               	dw	65535	; assembler added errata NOP
   700                           pclatu	equ	0xFFB
   701                           pclath	equ	0xFFA
   702                           tblptru	equ	0xFF8
   703                           tblptrh	equ	0xFF7
   704                           tblptrl	equ	0xFF6
   705                           tablat	equ	0xFF5
   706                           prodh	equ	0xFF4
   707                           prodl	equ	0xFF3
   708                           intcon	equ	0xFF2
   709                           intcon2	equ	0xFF1
   710                           fsr0h	equ	0xFEA
   711                           fsr0l	equ	0xFE9
   712                           fsr1h	equ	0xFE2
   713                           fsr1l	equ	0xFE1
   714                           postinc2	equ	0xFDE
   715                           postdec2	equ	0xFDD
   716                           fsr2h	equ	0xFDA
   717                           fsr2l	equ	0xFD9
   718                           status	equ	0xFD8
   719                           
   720 ;; *************** function ___flpack *****************
   721 ;; Defined at:
   722 ;;		line 64 in file "/opt/microchip/xc8/v1.21/sources/common/double.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  arg             4    0[COMRAM] unsigned long 
   725 ;;  exp             1    4[COMRAM] unsigned char 
   726 ;;  sign            1    5[COMRAM] unsigned char 
   727 ;; Auto vars:     Size  Location     Type
   728 ;;		None
   729 ;; Return value:  Size  Location     Type
   730 ;;                  4    0[COMRAM] unsigned char 
   731 ;; Registers used:
   732 ;;		wreg, status,2, status,0
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   738 ;;      Params:         6       0       0       0       0       0       0
   739 ;;      Locals:         0       0       0       0       0       0       0
   740 ;;      Temps:          4       0       0       0       0       0       0
   741 ;;      Totals:        10       0       0       0       0       0       0
   742 ;;Total ram usage:       10 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; This function calls:
   745 ;;		Nothing
   746 ;; This function is called by:
   747 ;;		___fladd
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text4
   752  00029A                     __ptext4:
   753                           	opt stack 0
   754  00029A  FFFF               	dw	65535	; assembler added errata NOP
   755  00029C                     ___flpack:
   756                           	opt stack 27
   757                           
   758                           ;incstack = 0
   759  00029C  FFFF               	dw	65535
   760                           
   761                           ;incstack = 0
   762  00029E  5005               	movf	___flpack@exp,w,c
   763  0002A0  B4D8               	btfsc	status,2,c
   764  0002A2  D006               	goto	i2l630
   765  0002A4  5004               	movf	___flpack@arg+3,w,c
   766  0002A6  1001               	iorwf	___flpack@arg,w,c
   767  0002A8  1002               	iorwf	___flpack@arg+1,w,c
   768  0002AA  1003               	iorwf	___flpack@arg+2,w,c
   769  0002AC  A4D8               	btfss	status,2,c
   770  0002AE  D011               	goto	i2l636
   771  0002B0                     i2l630:
   772  0002B0  FFFF               	dw	65535	; assembler added errata NOP
   773  0002B2  0E00               	movlw	0
   774  0002B4  6E01               	movwf	?___flpack,c
   775  0002B6  0E00               	movlw	0
   776  0002B8  6E02               	movwf	?___flpack+1,c
   777  0002BA  0E00               	movlw	0
   778  0002BC  6E03               	movwf	?___flpack+2,c
   779  0002BE  0E00               	movlw	0
   780  0002C0  6E04               	movwf	?___flpack+3,c
   781  0002C2  D072               	goto	i2l236
   782  0002C4                     i2l634:
   783  0002C4  FFFF               	dw	65535	; assembler added errata NOP
   784  0002C6  2A05               	incf	___flpack@exp,f,c
   785  0002C8  90D8               	bcf	status,0,c
   786  0002CA  3204               	rrcf	___flpack@arg+3,f,c
   787  0002CC  3203               	rrcf	___flpack@arg+2,f,c
   788  0002CE  3202               	rrcf	___flpack@arg+1,f,c
   789  0002D0  3201               	rrcf	___flpack@arg,f,c
   790  0002D2                     i2l636:
   791  0002D2  FFFF               	dw	65535	; assembler added errata NOP
   792  0002D4  0E00               	movlw	0
   793  0002D6  1401               	andwf	___flpack@arg,w,c
   794  0002D8  6E07               	movwf	??___flpack& (0+255),c
   795  0002DA  0E00               	movlw	0
   796  0002DC  1402               	andwf	___flpack@arg+1,w,c
   797  0002DE  6E08               	movwf	(??___flpack+1)& (0+255),c
   798  0002E0  0E00               	movlw	0
   799  0002E2  1403               	andwf	___flpack@arg+2,w,c
   800  0002E4  6E09               	movwf	(??___flpack+2)& (0+255),c
   801  0002E6  0EFE               	movlw	254
   802  0002E8  1404               	andwf	___flpack@arg+3,w,c
   803  0002EA  6E0A               	movwf	(??___flpack+3)& (0+255),c
   804  0002EC  500A               	movf	??___flpack+3,w,c
   805  0002EE  1007               	iorwf	??___flpack,w,c
   806  0002F0  1008               	iorwf	??___flpack+1,w,c
   807  0002F2  1009               	iorwf	??___flpack+2,w,c
   808  0002F4  B4D8               	btfsc	status,2,c
   809  0002F6  D010               	goto	i2l240
   810  0002F8  D7E5               	goto	i2l634
   811  0002FA                     i2l638:
   812  0002FA  FFFF               	dw	65535	; assembler added errata NOP
   813  0002FC  2A05               	incf	___flpack@exp,f,c
   814  0002FE  0E01               	movlw	1
   815  000300  2601               	addwf	___flpack@arg,f,c
   816  000302  0E00               	movlw	0
   817  000304  2202               	addwfc	___flpack@arg+1,f,c
   818  000306  0E00               	movlw	0
   819  000308  2203               	addwfc	___flpack@arg+2,f,c
   820  00030A  0E00               	movlw	0
   821  00030C  2204               	addwfc	___flpack@arg+3,f,c
   822  00030E  90D8               	bcf	status,0,c
   823  000310  3204               	rrcf	___flpack@arg+3,f,c
   824  000312  3203               	rrcf	___flpack@arg+2,f,c
   825  000314  3202               	rrcf	___flpack@arg+1,f,c
   826  000316  3201               	rrcf	___flpack@arg,f,c
   827  000318                     i2l240:
   828  000318  FFFF               	dw	65535	; assembler added errata NOP
   829  00031A  0E00               	movlw	0
   830  00031C  1401               	andwf	___flpack@arg,w,c
   831  00031E  6E07               	movwf	??___flpack& (0+255),c
   832  000320  0E00               	movlw	0
   833  000322  1402               	andwf	___flpack@arg+1,w,c
   834  000324  6E08               	movwf	(??___flpack+1)& (0+255),c
   835  000326  0E00               	movlw	0
   836  000328  1403               	andwf	___flpack@arg+2,w,c
   837  00032A  6E09               	movwf	(??___flpack+2)& (0+255),c
   838  00032C  0EFF               	movlw	255
   839  00032E  1404               	andwf	___flpack@arg+3,w,c
   840  000330  6E0A               	movwf	(??___flpack+3)& (0+255),c
   841  000332  500A               	movf	??___flpack+3,w,c
   842  000334  1007               	iorwf	??___flpack,w,c
   843  000336  1008               	iorwf	??___flpack+1,w,c
   844  000338  1009               	iorwf	??___flpack+2,w,c
   845  00033A  B4D8               	btfsc	status,2,c
   846  00033C  D008               	goto	i2l646
   847  00033E  D7DD               	goto	i2l638
   848  000340                     i2l644:
   849  000340  FFFF               	dw	65535	; assembler added errata NOP
   850  000342  0605               	decf	___flpack@exp,f,c
   851  000344  90D8               	bcf	status,0,c
   852  000346  3601               	rlcf	___flpack@arg,f,c
   853  000348  3602               	rlcf	___flpack@arg+1,f,c
   854  00034A  3603               	rlcf	___flpack@arg+2,f,c
   855  00034C  3604               	rlcf	___flpack@arg+3,f,c
   856  00034E                     i2l646:
   857  00034E  FFFF               	dw	65535	; assembler added errata NOP
   858  000350  AE03               	btfss	___flpack@arg+2,7,c
   859  000352  D7F6               	goto	i2l644
   860  000354  B005               	btfsc	___flpack@exp,0,c
   861  000356  D008               	goto	i2l246
   862  000358  0EFF               	movlw	255
   863  00035A  1601               	andwf	___flpack@arg,f,c
   864  00035C  0EFF               	movlw	255
   865  00035E  1602               	andwf	___flpack@arg+1,f,c
   866  000360  0E7F               	movlw	127
   867  000362  1603               	andwf	___flpack@arg+2,f,c
   868  000364  0EFF               	movlw	255
   869  000366  1604               	andwf	___flpack@arg+3,f,c
   870  000368                     i2l246:
   871  000368  FFFF               	dw	65535	; assembler added errata NOP
   872  00036A  90D8               	bcf	status,0,c
   873  00036C  3205               	rrcf	___flpack@exp,f,c
   874  00036E  C005  F007         	movff	___flpack@exp,??___flpack
   875  000372  6A08               	clrf	(??___flpack+1)& (0+255),c
   876  000374  6A09               	clrf	(??___flpack+2)& (0+255),c
   877  000376  6A0A               	clrf	(??___flpack+3)& (0+255),c
   878  000378  C007  F00A         	movff	??___flpack,??___flpack+3
   879  00037C  6A09               	clrf	??___flpack+2,c
   880  00037E  6A08               	clrf	??___flpack+1,c
   881  000380  6A07               	clrf	??___flpack,c
   882  000382  5007               	movf	??___flpack,w,c
   883  000384  1201               	iorwf	___flpack@arg,f,c
   884  000386  5008               	movf	??___flpack+1,w,c
   885  000388  1202               	iorwf	___flpack@arg+1,f,c
   886  00038A  5009               	movf	??___flpack+2,w,c
   887  00038C  1203               	iorwf	___flpack@arg+2,f,c
   888  00038E  500A               	movf	??___flpack+3,w,c
   889  000390  1204               	iorwf	___flpack@arg+3,f,c
   890  000392  5006               	movf	___flpack@sign,w,c
   891  000394  A4D8               	btfss	status,2,c
   892  000396  8E04               	bsf	___flpack@arg+3,7,c
   893  000398  C001  F001         	movff	___flpack@arg,?___flpack
   894  00039C  C002  F002         	movff	___flpack@arg+1,?___flpack+1
   895  0003A0  C003  F003         	movff	___flpack@arg+2,?___flpack+2
   896  0003A4  C004  F004         	movff	___flpack@arg+3,?___flpack+3
   897  0003A8                     i2l236:
   898  0003A8  FFFF               	dw	65535	; assembler added errata NOP
   899  0003AA  0012               	return	
   900  0003AC  FFFF               	dw	65535	; errata NOP
   901  0003AE                     __end_of___flpack:
   902                           	opt stack 0
   903  0003AE  FFFF               	dw	65535	; assembler added errata NOP
   904  0000                     pclatu	equ	0xFFB
   905                           pclath	equ	0xFFA
   906                           tblptru	equ	0xFF8
   907                           tblptrh	equ	0xFF7
   908                           tblptrl	equ	0xFF6
   909                           tablat	equ	0xFF5
   910                           prodh	equ	0xFF4
   911                           prodl	equ	0xFF3
   912                           intcon	equ	0xFF2
   913                           intcon2	equ	0xFF1
   914                           fsr0h	equ	0xFEA
   915                           fsr0l	equ	0xFE9
   916                           fsr1h	equ	0xFE2
   917                           fsr1l	equ	0xFE1
   918                           postinc2	equ	0xFDE
   919                           postdec2	equ	0xFDD
   920                           fsr2h	equ	0xFDA
   921                           fsr2l	equ	0xFD9
   922                           status	equ	0xFD8
   923                           pclatu	equ	0xFFB
   924                           pclath	equ	0xFFA
   925                           tblptru	equ	0xFF8
   926                           tblptrh	equ	0xFF7
   927                           tblptrl	equ	0xFF6
   928                           tablat	equ	0xFF5
   929                           prodh	equ	0xFF4
   930                           prodl	equ	0xFF3
   931                           intcon	equ	0xFF2
   932                           intcon2	equ	0xFF1
   933                           fsr0h	equ	0xFEA
   934                           fsr0l	equ	0xFE9
   935                           fsr1h	equ	0xFE2
   936                           fsr1l	equ	0xFE1
   937                           postinc2	equ	0xFDE
   938                           postdec2	equ	0xFDD
   939                           fsr2h	equ	0xFDA
   940                           fsr2l	equ	0xFD9
   941                           status	equ	0xFD8
   942                           
   943                           	psect	rparam
   944  0000                     pclatu	equ	0xFFB
   945                           pclath	equ	0xFFA
   946                           tblptru	equ	0xFF8
   947                           tblptrh	equ	0xFF7
   948                           tblptrl	equ	0xFF6
   949                           tablat	equ	0xFF5
   950                           prodh	equ	0xFF4
   951                           prodl	equ	0xFF3
   952                           intcon	equ	0xFF2
   953                           intcon2	equ	0xFF1
   954                           fsr0h	equ	0xFEA
   955                           fsr0l	equ	0xFE9
   956                           fsr1h	equ	0xFE2
   957                           fsr1l	equ	0xFE1
   958                           postinc2	equ	0xFDE
   959                           postdec2	equ	0xFDD
   960                           fsr2h	equ	0xFDA
   961                           fsr2l	equ	0xFD9
   962                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     42      46
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ?___fladd	 size(2) Largest target is 0

    ?___flpack	 size(2) Largest target is 0

    ?___asfladd	 size(2) Largest target is 0

    __asfladd@f1p	PTR  size(2) Largest target is 4
		 -> cnt(COMRAM[4]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->___asfladd
    ___asfladd->___fladd
    ___fladd->___flpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                 14    14      0     735
                                             28 COMRAM    14    14      0
                          ___asfladd
 ---------------------------------------------------------------------------------
 (2) ___asfladd                                            6     0      6     735
                                             22 COMRAM     6     0      6
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             12     4      8     690
                                             10 COMRAM    12     4      8
                           ___flpack
 ---------------------------------------------------------------------------------
 (4) ___flpack                                            10     4      6     135
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)
   ___asfladd
     ___fladd
       ___flpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2A      2E       1       48.4%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       8       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2E       9        0.0%
DATA                 0      0      36      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Thu Dec 19 18:55:18 2013

                                                   __CFG_OSC$RC 000000  
                                                  ___flpack@arg 0001  
                                                  ___flpack@exp 0005  
                                                           _cnt 002B  
                                                           _isr 0008  
                                                           fsr2 000FD9  
                                                 ___flpack@sign 0006  
                                                  __CFG_WDT$OFF 000000  
                                                          ?_isr 0001  
                                                          _LATB 000F8A  
                                                          i2l17 006A  
                                                          i2l18 006A  
                                                          _main 0404  
                                                          fsr0h 000FEA  
                                                          fsr1h 000FE2  
                                                          fsr0l 000FE9  
                                                          fsr2h 000FDA  
                                                          fsr1l 000FE1  
                                                          fsr2l 000FD9  
                                                          pclat 000FFA  
                                                          prodh 000FF4  
                                                          prodl 000FF3  
                                                          start 00A6  
                                                         ??_isr 001D  
                                                 __CFG_OSCS$OFF 000000  
                                               __end_of___fladd 0298  
                                                         ?_main 0001  
                                                         _T0CON 000FD5  
                                                         i2l240 0318  
                                                         i2l236 03A8  
                                                         i2l246 0368  
                                                         i2l254 00D6  
                                                         i2l255 0292  
                                                         i2l258 0108  
                                                         i2l269 01D2  
                                                         i2l630 02B0  
                                                         i2l710 01F8  
                                                         i2l704 01BC  
                                                         i2l634 02C4  
                                                         i2l714 021E  
                                                         i2l706 01CA  
                                                         i2l644 0340  
                                                         i2l636 02D2  
                                                         i2l724 0264  
                                                         i2l732 0042  
                                                         i2l646 034E  
                                                         i2l638 02FA  
                                                         i2l670 011C  
                                                         i2l734 004A  
                                                         i2l664 00EA  
                                                         i2l736 0066  
                                                         i2l692 017A  
                                                         i2l694 0188  
                                                         i2l686 0158  
                                                         i2l696 0192  
                                                         i2l698 019A  
                                                         _PORTB 000F81  
                                                         _TRISB 000F93  
                                                         tablat 000FF5  
                                                         status 000FD8  
                                               __initialization 0424  
                                                  __end_of_main 0422  
                                                        ??_main 002B  
                                                 __activetblptr 000000  
                                              __end_of___flpack 03AE  
                                                        _INTCON 000FF2  
                                                     ??___fladd 0013  
                                                        tblptrh 000FF7  
                                                        tblptrl 000FF6  
                                                        tblptru 000FF8  
                                            __size_of___asfladd 004E  
                                                    ___fladd@f1 000B  
                                                    ___fladd@f2 000F  
                                                    __accesstop 0060  
                                       __end_of__initialization 042C  
                                                __pcstackCOMRAM 0001  
                                             __end_of___asfladd 0400  
                                                     ?___flpack 0001  
                                                       _INTCON2 000FF1  
                                                       i2u27_40 004A  
                                                       i2u27_41 0048  
                                                       __Hparam 0000  
                                                       __Lparam 0000  
                                                       ___fladd 00AC  
                                                    ??___flpack 0007  
                                                       __pcinit 0424  
                                                       __ramtop 0600  
                                                       __ptext0 0402  
                                                       __ptext2 03B0  
                                                       __ptext3 00AA  
                                                       __ptext4 029A  
                                                  __size_of_isr 009E  
                                          end_of_initialization 042C  
                                                       postdec2 000FDD  
                                                       postinc2 000FDE  
                                           start_initialization 0424  
                                                   __end_of_isr 00A6  
                                             __size_of___flpack 0112  
                                                     ___asfladd 03B2  
                                                   __pbssCOMRAM 002B  
                                                     __pintcode 0008  
                                                      ?___fladd 000B  
                                                    ?___asfladd 0017  
                                                      __Hrparam 0000  
                                                      __Lrparam 0000  
                                              __size_of___fladd 01EC  
                                                      ___flpack 029C  
                                                   ??___asfladd 001D  
                                                 __size_of_main 001E  
                                                      intlevel2 0436  
                                                  ___fladd@exp1 0016  
                                                  ___fladd@exp2 0015  
                                                  ___fladd@sign 0014  
                                                 ___asfladd@f1p 0017  
                                                  ___asfladd@f2 0019  
