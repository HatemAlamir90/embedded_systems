

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Thu Jun 18 20:28:57 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           	psect	smallconst
    17  000800                     __psmallconst:
    18                           	opt stack 0
    19  000800                     _ipus:
    20                           	opt stack 0
    21  000800  0001               	dw	1
    22  000802  0000               	dw	0
    23  000804                     __end_of_ipus:
    24                           	opt stack 0
    25  0000                     _TMR3	set	4018
    26  0000                     _ADCON0	set	4034
    27  0000                     _ADCON1	set	4033
    28  0000                     _ADCON2	set	4032
    29  0000                     _CCP1CON	set	4029
    30  0000                     _CCP2CON	set	4026
    31  0000                     _CMCON	set	4020
    32  0000                     _INTCONbits	set	4082
    33  0000                     _PORTD	set	3971
    34  0000                     _T0CON	set	4053
    35  0000                     _T3CON	set	4017
    36  0000                     _TMR0H	set	4055
    37  0000                     _TMR0L	set	4054
    38  0000                     _TRISA	set	3986
    39  0000                     _TRISB	set	3987
    40  0000                     _TRISC	set	3988
    41  0000                     _TRISD	set	3989
    42  0000                     _TRISE	set	3990
    43  0000                     _ADIE	set	31982
    44  0000                     _ADIF	set	31990
    45  0000                     _ADIP	set	31998
    46  0000                     _CLK1EN	set	31516
    47  0000                     _CSEN	set	31517
    48  0000                     _CVREN	set	32175
    49  0000                     _CVROE	set	32174
    50  0000                     _INT0IE	set	32660
    51  0000                     _INT0IF	set	32657
    52  0000                     _INT1IE	set	32643
    53  0000                     _INT1IF	set	32640
    54  0000                     _INT1IP	set	32646
    55  0000                     _INT2IE	set	32644
    56  0000                     _INT2IF	set	32641
    57  0000                     _INT2IP	set	32647
    58  0000                     _INTEDG0	set	32654
    59  0000                     _INTEDG1	set	32653
    60  0000                     _INTEDG2	set	32652
    61  0000                     _IPEN	set	32391
    62  0000                     _PEIE	set	32662
    63  0000                     _RA5	set	31749
    64  0000                     _RB0	set	31752
    65  0000                     _RBIE	set	32659
    66  0000                     _RBIF	set	32656
    67  0000                     _RBIP	set	32648
    68  0000                     _RC1	set	31761
    69  0000                     _RC2	set	31762
    70  0000                     _RC3	set	31763
    71  0000                     _RC6	set	31766
    72  0000                     _RC7	set	31767
    73  0000                     _RDPU	set	31783
    74  0000                     _SPEN	set	32095
    75  0000                     _SPPEN	set	31528
    76  0000                     _SSPEN	set	32309
    77  0000                     _TMR0IE	set	32661
    78  0000                     _TMR0IF	set	32658
    79  0000                     _TMR0IP	set	32650
    80  0000                     _TMR3IE	set	32001
    81  0000                     _TMR3IF	set	32009
    82  0000                     _TMR3IP	set	32017
    83  0000                     _TXEN	set	32101
    84  0000                     _USBEN	set	31595
    85  0000                     _nRBPU	set	32655
    86                           
    87                           ; #config settings
    88  000804  00                 	db	0	; dummy byte at the end
    89  0000                     
    90                           	psect	cinit
    91  0009C4                     __pcinit:
    92                           	opt stack 0
    93  0009C4                     start_initialization:
    94                           	opt stack 0
    95  0009C4                     __initialization:
    96                           	opt stack 0
    97                           
    98                           ; Clear objects allocated to BITCOMRAM (1 bytes)
    99  0009C4  6A1A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   100                           
   101                           ; Clear objects allocated to COMRAM (11 bytes)
   102  0009C6  EE00  F00F         	lfsr	0,__pbssCOMRAM
   103  0009CA  0E0B               	movlw	11
   104  0009CC                     clear_0:
   105  0009CC  6AEE               	clrf	postinc0,c
   106  0009CE  06E8               	decf	wreg,f,c
   107  0009D0  E1FD               	bnz	clear_0
   108  0009D2                     end_of_initialization:
   109                           	opt stack 0
   110  0009D2                     __end_of__initialization:
   111                           	opt stack 0
   112  0009D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   113  0009D4  6EF8               	movwf	tblptru,c
   114  0009D6  0100               	movlb	0
   115  0009D8  EF9E  F004         	goto	_main	;jump to C main() function
   116                           tblptru	equ	0xFF8
   117                           postinc0	equ	0xFEE
   118                           wreg	equ	0xFE8
   119                           
   120                           	psect	bitbssCOMRAM
   121  0000D0                     __pbitbssCOMRAM:
   122                           	opt stack 0
   123  0000D0                     _close:
   124                           	opt stack 0
   125  0000D0                     	ds	1
   126  0000D1                     _open:
   127                           	opt stack 0
   128  0000D1                     	ds	1
   129  0000D2                     _sleepy:
   130                           	opt stack 0
   131  0000D2                     	ds	1
   132  0000D3                     _warn:
   133                           	opt stack 0
   134  0000D3                     	ds	1
   135                           tblptru	equ	0xFF8
   136                           postinc0	equ	0xFEE
   137                           wreg	equ	0xFE8
   138                           
   139                           	psect	bssCOMRAM
   140  00000F                     __pbssCOMRAM:
   141                           	opt stack 0
   142  00000F                     _i:
   143                           	opt stack 0
   144  00000F                     	ds	4
   145  000013                     _nl:
   146                           	opt stack 0
   147  000013                     	ds	4
   148  000017                     _time:
   149                           	opt stack 0
   150  000017                     	ds	2
   151  000019                     _data:
   152                           	opt stack 0
   153  000019                     	ds	1
   154                           tblptru	equ	0xFF8
   155                           postinc0	equ	0xFEE
   156                           wreg	equ	0xFE8
   157                           
   158                           	psect	cstackCOMRAM
   159  000001                     __pcstackCOMRAM:
   160                           	opt stack 0
   161  000001                     ??_isr:
   162  000001                     
   163                           ; 0 bytes @ 0x0
   164  000001                     	ds	14
   165  00000F                     tblptru	equ	0xFF8
   166                           postinc0	equ	0xFEE
   167                           wreg	equ	0xFE8
   168                           
   169                           ; 0 bytes @ 0xE
   170 ;;
   171 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   172 ;;
   173 ;; *************** function _main *****************
   174 ;; Defined at:
   175 ;;		line 143 in file "AutoDoorOpener.c"
   176 ;; Parameters:    Size  Location     Type
   177 ;;		None
   178 ;; Auto vars:     Size  Location     Type
   179 ;;		None
   180 ;; Return value:  Size  Location     Type
   181 ;;		None               void
   182 ;; Registers used:
   183 ;;		wreg, status,2
   184 ;; Tracked objects:
   185 ;;		On entry : 0/0
   186 ;;		On exit  : 0/0
   187 ;;		Unchanged: 0/0
   188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   189 ;;      Params:         0       0       0       0       0       0       0       0       0
   190 ;;      Locals:         0       0       0       0       0       0       0       0       0
   191 ;;      Temps:          0       0       0       0       0       0       0       0       0
   192 ;;      Totals:         0       0       0       0       0       0       0       0       0
   193 ;;Total ram usage:        0 bytes
   194 ;; Hardware stack levels required when called:    1
   195 ;; This function calls:
   196 ;;		Nothing
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           	psect	text0
   203  00093C                     __ptext0:
   204                           	opt stack 0
   205  00093C                     _main:
   206                           	opt stack 30
   207                           
   208                           ;AutoDoorOpener.c: 144: (INTCONbits.GIE = 0);
   209                           
   210                           ;incstack = 0
   211                           ;incstack = 0
   212  00093C  9EF2               	bcf	intcon,7,c	;volatile
   213                           
   214                           ;AutoDoorOpener.c: 146: warn = 0b0;
   215  00093E  0100               	movlb	(_warn/(0+8)) shr (0+8)
   216  000940  961A               	bcf	_warn/(0+8),_warn& (0+7),c	;volatile
   217                           
   218                           ;AutoDoorOpener.c: 150: TRISA = 0xDF;
   219  000942  0EDF               	movlw	223
   220  000944  6E92               	movwf	3986,c	;volatile
   221                           
   222                           ;AutoDoorOpener.c: 156: USBEN = 0b0;
   223  000946  966D               	bcf	3949,3,c	;volatile
   224                           
   225                           ;AutoDoorOpener.c: 157: CVREN = 0b0;
   226  000948  9EB5               	bcf	4021,7,c	;volatile
   227                           
   228                           ;AutoDoorOpener.c: 158: CVROE = 0b0;
   229  00094A  9CB5               	bcf	4021,6,c	;volatile
   230                           
   231                           ;AutoDoorOpener.c: 159: CMCON = 0x07;
   232  00094C  0E07               	movlw	7
   233  00094E  6EB4               	movwf	4020,c	;volatile
   234                           
   235                           ;AutoDoorOpener.c: 161: TRISB = 0xFF;
   236  000950  6893               	setf	3987,c	;volatile
   237                           
   238                           ;AutoDoorOpener.c: 163: nRBPU = 0b1;
   239  000952  8EF1               	bsf	intcon2,7,c	;volatile
   240                           
   241                           ;AutoDoorOpener.c: 164: SSPEN = 0b0;
   242  000954  9AC6               	bcf	4038,5,c	;volatile
   243                           
   244                           ;AutoDoorOpener.c: 166: SPPEN = 0b0;
   245  000956  9065               	bcf	3941,0,c	;volatile
   246                           
   247                           ;AutoDoorOpener.c: 168: CSEN = 0b0;
   248  000958  9A63               	bcf	3939,5,c	;volatile
   249                           
   250                           ;AutoDoorOpener.c: 171: TRISC = 0x06;
   251  00095A  0E06               	movlw	6
   252  00095C  6E94               	movwf	3988,c	;volatile
   253                           
   254                           ;AutoDoorOpener.c: 182: SPEN = 0b0;
   255  00095E  9EAB               	bcf	4011,7,c	;volatile
   256                           
   257                           ;AutoDoorOpener.c: 183: TXEN = 0b0;
   258  000960  9AAC               	bcf	4012,5,c	;volatile
   259                           
   260                           ;AutoDoorOpener.c: 185: TRISD = 0x00;
   261  000962  0E00               	movlw	0
   262  000964  6E95               	movwf	3989,c	;volatile
   263                           
   264                           ;AutoDoorOpener.c: 187: RDPU = 0b0;
   265  000966  9E84               	bcf	3972,7,c	;volatile
   266                           
   267                           ;AutoDoorOpener.c: 189: TRISE = 0xF8;
   268  000968  0EF8               	movlw	248
   269  00096A  6E96               	movwf	3990,c	;volatile
   270                           
   271                           ;AutoDoorOpener.c: 196: CLK1EN = 0b0;
   272  00096C  9863               	bcf	3939,4,c	;volatile
   273                           
   274                           ;AutoDoorOpener.c: 199: IPEN = 0b0;
   275  00096E  9ED0               	bcf	4048,7,c	;volatile
   276                           
   277                           ;AutoDoorOpener.c: 200: PEIE = 0b1;
   278  000970  8CF2               	bsf	intcon,6,c	;volatile
   279                           
   280                           ;AutoDoorOpener.c: 202: INT0IF = 0b0;
   281  000972  92F2               	bcf	intcon,1,c	;volatile
   282                           
   283                           ;AutoDoorOpener.c: 203: INTEDG0 = 0b0;
   284  000974  9CF1               	bcf	intcon2,6,c	;volatile
   285                           
   286                           ;AutoDoorOpener.c: 204: INT0IE = 0b1;
   287  000976  88F2               	bsf	intcon,4,c	;volatile
   288                           
   289                           ;AutoDoorOpener.c: 206: INT1IF = 0b0;
   290  000978  90F0               	bcf	intcon3,0,c	;volatile
   291                           
   292                           ;AutoDoorOpener.c: 207: INTEDG1 = 0b0;
   293  00097A  9AF1               	bcf	intcon2,5,c	;volatile
   294                           
   295                           ;AutoDoorOpener.c: 208: INT1IP = 0b0;
   296  00097C  9CF0               	bcf	intcon3,6,c	;volatile
   297                           
   298                           ;AutoDoorOpener.c: 209: INT1IE = 0b1;
   299  00097E  86F0               	bsf	intcon3,3,c	;volatile
   300                           
   301                           ;AutoDoorOpener.c: 211: INT2IF = 0b0;
   302  000980  92F0               	bcf	intcon3,1,c	;volatile
   303                           
   304                           ;AutoDoorOpener.c: 212: INTEDG2 = 0b0;
   305  000982  98F1               	bcf	intcon2,4,c	;volatile
   306                           
   307                           ;AutoDoorOpener.c: 213: INT2IP = 0b0;
   308  000984  9EF0               	bcf	intcon3,7,c	;volatile
   309                           
   310                           ;AutoDoorOpener.c: 214: INT2IE = 0b1;
   311  000986  88F0               	bsf	intcon3,4,c	;volatile
   312                           
   313                           ;AutoDoorOpener.c: 216: RBIF = 0b0;
   314  000988  90F2               	bcf	intcon,0,c	;volatile
   315                           
   316                           ;AutoDoorOpener.c: 217: RBIP = 0b0;
   317  00098A  90F1               	bcf	intcon2,0,c	;volatile
   318                           
   319                           ;AutoDoorOpener.c: 218: RBIE = 0b1;
   320  00098C  86F2               	bsf	intcon,3,c	;volatile
   321                           
   322                           ;AutoDoorOpener.c: 220: TMR0IF = 0b0;
   323  00098E  94F2               	bcf	intcon,2,c	;volatile
   324                           
   325                           ;AutoDoorOpener.c: 221: TMR0IP = 0b0;
   326  000990  94F1               	bcf	intcon2,2,c	;volatile
   327                           
   328                           ;AutoDoorOpener.c: 222: T0CON = 0x85;
   329  000992  0E85               	movlw	133
   330  000994  6ED5               	movwf	4053,c	;volatile
   331                           
   332                           ;AutoDoorOpener.c: 231: TMR0IE = 0b1;
   333  000996  8AF2               	bsf	intcon,5,c	;volatile
   334                           
   335                           ;AutoDoorOpener.c: 233: T3CON = 0xC9;
   336  000998  0EC9               	movlw	201
   337  00099A  6EB1               	movwf	4017,c	;volatile
   338                           
   339                           ;AutoDoorOpener.c: 242: TMR3IF = 0b0;
   340  00099C  92A1               	bcf	4001,1,c	;volatile
   341                           
   342                           ;AutoDoorOpener.c: 243: TMR3IP = 0b0;
   343  00099E  92A2               	bcf	4002,1,c	;volatile
   344                           
   345                           ;AutoDoorOpener.c: 244: TMR3IE = 0b1;
   346  0009A0  82A0               	bsf	4000,1,c	;volatile
   347                           
   348                           ;AutoDoorOpener.c: 246: ADIF = 0b0;
   349  0009A2  9C9E               	bcf	3998,6,c	;volatile
   350                           
   351                           ;AutoDoorOpener.c: 247: ADIP = 0b0;
   352  0009A4  9C9F               	bcf	3999,6,c	;volatile
   353                           
   354                           ;AutoDoorOpener.c: 248: ADCON0 = 0x00;
   355  0009A6  0E00               	movlw	0
   356  0009A8  6EC2               	movwf	4034,c	;volatile
   357                           
   358                           ;AutoDoorOpener.c: 254: ADCON1 = 0x1D;
   359  0009AA  0E1D               	movlw	29
   360  0009AC  6EC1               	movwf	4033,c	;volatile
   361                           
   362                           ;AutoDoorOpener.c: 259: ADCON2 = 0x97;
   363  0009AE  0E97               	movlw	151
   364  0009B0  6EC0               	movwf	4032,c	;volatile
   365                           
   366                           ;AutoDoorOpener.c: 265: ADIE = 0b1;
   367  0009B2  8C9D               	bsf	3997,6,c	;volatile
   368                           
   369                           ;AutoDoorOpener.c: 267: CCP1CON = 0x05;
   370  0009B4  0E05               	movlw	5
   371  0009B6  6EBD               	movwf	4029,c	;volatile
   372                           
   373                           ;AutoDoorOpener.c: 272: CCP2CON = 0x00;
   374  0009B8  0E00               	movlw	0
   375  0009BA  6EBA               	movwf	4026,c	;volatile
   376                           
   377                           ;AutoDoorOpener.c: 273: (INTCONbits.GIE = 1);
   378  0009BC  8EF2               	bsf	intcon,7,c	;volatile
   379                           
   380                           ;AutoDoorOpener.c: 274: if(RB0 == 0b0)
   381  0009BE  A081               	btfss	3969,0,c	;volatile
   382                           
   383                           ;AutoDoorOpener.c: 275: {
   384                           ;AutoDoorOpener.c: 276: RA5 = 0b1;
   385  0009C0  8A80               	bsf	3968,5,c	;volatile
   386  0009C2                     l144:
   387                           
   388                           ;AutoDoorOpener.c: 280: {}
   389  0009C2  D7FF               	goto	l144
   390  0009C4                     __end_of_main:
   391                           	opt stack 0
   392                           tblptru	equ	0xFF8
   393                           intcon	equ	0xFF2
   394                           intcon2	equ	0xFF1
   395                           intcon3	equ	0xFF0
   396                           postinc0	equ	0xFEE
   397                           wreg	equ	0xFE8
   398                           
   399 ;; *************** function _isr *****************
   400 ;; Defined at:
   401 ;;		line 76 in file "AutoDoorOpener.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;		None               void
   408 ;; Registers used:
   409 ;;		wreg, status,2, status,0
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   415 ;;      Params:         0       0       0       0       0       0       0       0       0
   416 ;;      Locals:         0       0       0       0       0       0       0       0       0
   417 ;;      Temps:         14       0       0       0       0       0       0       0       0
   418 ;;      Totals:        14       0       0       0       0       0       0       0       0
   419 ;;Total ram usage:       14 bytes
   420 ;; Hardware stack levels used:    1
   421 ;; This function calls:
   422 ;;		Nothing
   423 ;; This function is called by:
   424 ;;		Interrupt level 2
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	intcode
   429  000008                     __pintcode:
   430                           	opt stack 0
   431  000008                     _isr:
   432                           	opt stack 30
   433                           
   434                           ;incstack = 0
   435  000008  CFFA F001          	movff	pclath,??_isr
   436  00000C  CFFB F002          	movff	pclatu,??_isr+1
   437  000010  ED03  F004         	call	int_func,f	;refresh shadow registers
   438                           pclatu	equ	0xFFB
   439                           pclath	equ	0xFFA
   440                           tblptru	equ	0xFF8
   441                           intcon	equ	0xFF2
   442                           intcon2	equ	0xFF1
   443                           intcon3	equ	0xFF0
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           
   447                           	psect	intcode_body
   448  000806                     __pintcode_body:
   449                           	opt stack 30
   450  000806                     int_func:
   451                           	opt stack 30
   452  000806  0006               	pop		; remove dummy address from shadow register refresh
   453  000808  CFE9 F003          	movff	fsr0l,??_isr+2
   454  00080C  CFEA F004          	movff	fsr0h,??_isr+3
   455  000810  CFE1 F005          	movff	fsr1l,??_isr+4
   456  000814  CFE2 F006          	movff	fsr1h,??_isr+5
   457  000818  CFD9 F007          	movff	fsr2l,??_isr+6
   458  00081C  CFDA F008          	movff	fsr2h,??_isr+7
   459  000820  CFF3 F009          	movff	prodl,??_isr+8
   460  000824  CFF4 F00A          	movff	prodh,??_isr+9
   461  000828  CFF6 F00B          	movff	tblptrl,??_isr+10
   462  00082C  CFF7 F00C          	movff	tblptrh,??_isr+11
   463  000830  CFF8 F00D          	movff	tblptru,??_isr+12
   464  000834  CFF5 F00E          	movff	tablat,??_isr+13
   465  000838                     
   466                           ;AutoDoorOpener.c: 77: if(INT0IF)
   467  000838  A2F2               	btfss	intcon,1,c	;volatile
   468  00083A  D001               	goto	i2u1_41
   469  00083C  D001               	goto	i2u1_40
   470  00083E                     i2u1_41:
   471  00083E  D002               	goto	i2l127
   472  000840                     i2u1_40:
   473  000840                     
   474                           ;AutoDoorOpener.c: 80: if(warn)
   475  000840  92F2               	bcf	intcon,1,c	;volatile
   476  000842  D000               	goto	i2l127
   477  000844                     i2l127:
   478                           
   479                           ;AutoDoorOpener.c: 83: }
   480                           ;AutoDoorOpener.c: 84: }
   481                           ;AutoDoorOpener.c: 85: if(INT1IF)
   482  000844  A0F0               	btfss	intcon3,0,c	;volatile
   483  000846  D001               	goto	i2u2_41
   484  000848  D001               	goto	i2u2_40
   485  00084A                     i2u2_41:
   486  00084A  D00F               	goto	i2l1162
   487  00084C                     i2u2_40:
   488  00084C                     
   489                           ;AutoDoorOpener.c: 86: {
   490                           ;AutoDoorOpener.c: 87: INT1IF = 0b0;
   491  00084C  90F0               	bcf	intcon3,0,c	;volatile
   492  00084E                     
   493                           ;AutoDoorOpener.c: 88: time = 0;
   494  00084E  0E00               	movlw	0
   495  000850  6E18               	movwf	_time+1,c	;volatile
   496  000852  0E00               	movlw	0
   497  000854  6E17               	movwf	_time,c	;volatile
   498  000856                     
   499                           ;AutoDoorOpener.c: 89: open = 0b1;
   500  000856  0100               	movlb	(_open/(0+8)) shr (0+8)
   501  000858  821A               	bsf	_open/(0+8),_open& (0+7),c	;volatile
   502  00085A                     
   503                           ;AutoDoorOpener.c: 90: close = 0b0;
   504  00085A  0100               	movlb	(_close/(0+8)) shr (0+8)
   505  00085C  901A               	bcf	_close/(0+8),_close& (0+7),c	;volatile
   506  00085E                     
   507                           ;AutoDoorOpener.c: 91: RA5 = 0b1;
   508  00085E  8A80               	bsf	3968,5,c	;volatile
   509                           
   510                           ;AutoDoorOpener.c: 92: TMR0H = 0;
   511  000860  0E00               	movlw	0
   512  000862  6ED7               	movwf	4055,c	;volatile
   513                           
   514                           ;AutoDoorOpener.c: 93: TMR0L = 0;
   515  000864  0E00               	movlw	0
   516  000866  6ED6               	movwf	4054,c	;volatile
   517  000868  D000               	goto	i2l1162
   518  00086A                     i2l1162:
   519                           
   520                           ;AutoDoorOpener.c: 94: }
   521                           ;AutoDoorOpener.c: 95: if(INT2IF)
   522  00086A  A2F0               	btfss	intcon3,1,c	;volatile
   523  00086C  D001               	goto	i2u3_41
   524  00086E  D001               	goto	i2u3_40
   525  000870                     i2u3_41:
   526  000870  D00B               	goto	i2l1170
   527  000872                     i2u3_40:
   528  000872                     
   529                           ;AutoDoorOpener.c: 96: {
   530                           ;AutoDoorOpener.c: 97: INT2IF = 0b0;
   531  000872  92F0               	bcf	intcon3,1,c	;volatile
   532  000874                     
   533                           ;AutoDoorOpener.c: 98: time = 0;
   534  000874  0E00               	movlw	0
   535  000876  6E18               	movwf	_time+1,c	;volatile
   536  000878  0E00               	movlw	0
   537  00087A  6E17               	movwf	_time,c	;volatile
   538  00087C                     
   539                           ;AutoDoorOpener.c: 99: RC7 = 0b1;
   540  00087C  8E82               	bsf	3970,7,c	;volatile
   541                           
   542                           ;AutoDoorOpener.c: 100: TMR3 = 0;
   543  00087E  0E00               	movlw	0
   544  000880  6EB3               	movwf	4019,c	;volatile
   545  000882  0E00               	movlw	0
   546  000884  6EB2               	movwf	4018,c	;volatile
   547  000886  D000               	goto	i2l1170
   548  000888                     i2l1170:
   549                           
   550                           ;AutoDoorOpener.c: 101: }
   551                           ;AutoDoorOpener.c: 102: if(ADIF)
   552  000888  AC9E               	btfss	3998,6,c	;volatile
   553  00088A  D001               	goto	i2u4_41
   554  00088C  D001               	goto	i2u4_40
   555  00088E                     i2u4_41:
   556  00088E  D001               	goto	i2l131
   557  000890                     i2u4_40:
   558  000890                     
   559                           ;AutoDoorOpener.c: 103: {
   560                           ;AutoDoorOpener.c: 104: ADIF = 0b0;
   561  000890  9C9E               	bcf	3998,6,c	;volatile
   562  000892                     i2l131:
   563                           
   564                           ;AutoDoorOpener.c: 105: }
   565                           ;AutoDoorOpener.c: 106: if(RBIF)
   566  000892  A0F2               	btfss	intcon,0,c	;volatile
   567  000894  D001               	goto	i2u5_41
   568  000896  D001               	goto	i2u5_40
   569  000898                     i2u5_41:
   570  000898  D001               	goto	i2l132
   571  00089A                     i2u5_40:
   572  00089A                     
   573                           ;AutoDoorOpener.c: 107: {
   574                           ;AutoDoorOpener.c: 108: RBIF = 0b0;
   575  00089A  90F2               	bcf	intcon,0,c	;volatile
   576  00089C                     i2l132:
   577                           
   578                           ;AutoDoorOpener.c: 109: }
   579                           ;AutoDoorOpener.c: 110: if(TMR0IF)
   580  00089C  A4F2               	btfss	intcon,2,c	;volatile
   581  00089E  D001               	goto	i2u6_41
   582  0008A0  D001               	goto	i2u6_40
   583  0008A2                     i2u6_41:
   584  0008A2  D02E               	goto	i2l1196
   585  0008A4                     i2u6_40:
   586  0008A4                     
   587                           ;AutoDoorOpener.c: 111: {
   588                           ;AutoDoorOpener.c: 112: TMR0IF = 0b0;
   589  0008A4  94F2               	bcf	intcon,2,c	;volatile
   590                           
   591                           ;AutoDoorOpener.c: 113: if(open == 0b1)
   592  0008A6  0100               	movlb	(_open/(0+8)) shr (0+8)
   593  0008A8  A21A               	btfss	_open/(0+8),_open& (0+7),c	;volatile
   594  0008AA  D001               	goto	i2u7_41
   595  0008AC  D001               	goto	i2u7_40
   596  0008AE                     i2u7_41:
   597  0008AE  D009               	goto	i2l134
   598  0008B0                     i2u7_40:
   599  0008B0                     
   600                           ;AutoDoorOpener.c: 114: {
   601                           ;AutoDoorOpener.c: 115: open = 0b0;
   602  0008B0  0100               	movlb	(_open/(0+8)) shr (0+8)
   603  0008B2  921A               	bcf	_open/(0+8),_open& (0+7),c	;volatile
   604                           
   605                           ;AutoDoorOpener.c: 116: RC6 = 0b1;
   606  0008B4  8C82               	bsf	3970,6,c	;volatile
   607  0008B6                     
   608                           ;AutoDoorOpener.c: 117: TMR3 = 0;
   609  0008B6  0E00               	movlw	0
   610  0008B8  6EB3               	movwf	4019,c	;volatile
   611  0008BA  0E00               	movlw	0
   612  0008BC  6EB2               	movwf	4018,c	;volatile
   613  0008BE                     
   614                           ;AutoDoorOpener.c: 118: RA5 = 0b0;
   615  0008BE  9A80               	bcf	3968,5,c	;volatile
   616                           
   617                           ;AutoDoorOpener.c: 119: }
   618  0008C0  D01F               	goto	i2l1196
   619  0008C2                     i2l134:
   620                           
   621                           ;AutoDoorOpener.c: 120: else if(close = 0b1)
   622  0008C2  0100               	movlb	(_close/(0+8)) shr (0+8)
   623  0008C4  801A               	bsf	_close/(0+8),_close& (0+7),c	;volatile
   624  0008C6  A01A               	btfss	_close/(0+8),_close& (0+7),c	;volatile
   625  0008C8  D001               	goto	i2u8_41
   626  0008CA  D001               	goto	i2u8_40
   627  0008CC                     i2u8_41:
   628  0008CC  D004               	goto	i2l1186
   629  0008CE                     i2u8_40:
   630  0008CE                     
   631                           ;AutoDoorOpener.c: 121: {
   632                           ;AutoDoorOpener.c: 122: close = 0b0;
   633  0008CE  0100               	movlb	(_close/(0+8)) shr (0+8)
   634  0008D0  901A               	bcf	_close/(0+8),_close& (0+7),c	;volatile
   635                           
   636                           ;AutoDoorOpener.c: 123: RA5 = 0b0;
   637  0008D2  9A80               	bcf	3968,5,c	;volatile
   638                           
   639                           ;AutoDoorOpener.c: 124: }
   640  0008D4  D015               	goto	i2l1196
   641  0008D6                     i2l1186:
   642                           
   643                           ;AutoDoorOpener.c: 125: else
   644                           ;AutoDoorOpener.c: 126: {
   645                           ;AutoDoorOpener.c: 127: time++;
   646  0008D6  4A17               	infsnz	_time,f,c	;volatile
   647  0008D8  2A18               	incf	_time+1,f,c	;volatile
   648  0008DA                     
   649                           ;AutoDoorOpener.c: 128: if(time >= (unsigned int)143)
   650  0008DA  0E8F               	movlw	143
   651  0008DC  5C17               	subwf	_time,w,c	;volatile
   652  0008DE  0E00               	movlw	0
   653  0008E0  5818               	subwfb	_time+1,w,c	;volatile
   654  0008E2  A0D8               	btfss	status,0,c
   655  0008E4  D001               	goto	i2u9_41
   656  0008E6  D001               	goto	i2u9_40
   657  0008E8                     i2u9_41:
   658  0008E8  D00B               	goto	i2l1196
   659  0008EA                     i2u9_40:
   660  0008EA                     
   661                           ;AutoDoorOpener.c: 129: {
   662                           ;AutoDoorOpener.c: 130: time = 0;
   663  0008EA  0E00               	movlw	0
   664  0008EC  6E18               	movwf	_time+1,c	;volatile
   665  0008EE  0E00               	movlw	0
   666  0008F0  6E17               	movwf	_time,c	;volatile
   667  0008F2                     
   668                           ;AutoDoorOpener.c: 131: sleepy = 0b1;
   669  0008F2  0100               	movlb	(_sleepy/(0+8)) shr (0+8)
   670  0008F4  841A               	bsf	_sleepy/(0+8),_sleepy& (0+7),c	;volatile
   671  0008F6                     
   672                           ;AutoDoorOpener.c: 132: INT2IF = 0b1;
   673  0008F6  82F0               	bsf	intcon3,1,c	;volatile
   674  0008F8  D003               	goto	i2l1196
   675  0008FA  D002               	goto	i2l1196
   676  0008FC  D001               	goto	i2l1196
   677  0008FE  D000               	goto	i2l1196
   678  000900                     i2l1196:
   679                           
   680                           ;AutoDoorOpener.c: 133: }
   681                           ;AutoDoorOpener.c: 134: }
   682                           ;AutoDoorOpener.c: 135: }
   683                           ;AutoDoorOpener.c: 136: if(TMR3IF)
   684  000900  D000               	goto	i2l140
   685  000902                     i2l140:
   686  000902  C00E  FFF5         	movff	??_isr+13,tablat
   687  000906  C00D  FFF8         	movff	??_isr+12,tblptru
   688  00090A  C00C  FFF7         	movff	??_isr+11,tblptrh
   689  00090E  C00B  FFF6         	movff	??_isr+10,tblptrl
   690  000912  C00A  FFF4         	movff	??_isr+9,prodh
   691  000916  C009  FFF3         	movff	??_isr+8,prodl
   692  00091A  C008  FFDA         	movff	??_isr+7,fsr2h
   693  00091E  C007  FFD9         	movff	??_isr+6,fsr2l
   694  000922  C006  FFE2         	movff	??_isr+5,fsr1h
   695  000926  C005  FFE1         	movff	??_isr+4,fsr1l
   696  00092A  C004  FFEA         	movff	??_isr+3,fsr0h
   697  00092E  C003  FFE9         	movff	??_isr+2,fsr0l
   698  000932  C002  FFFB         	movff	??_isr+1,pclatu
   699  000936  C001  FFFA         	movff	??_isr,pclath
   700  00093A  0011               	retfie		f
   701  00093C                     __end_of_isr:
   702                           	opt stack 0
   703                           pclatu	equ	0xFFB
   704                           pclath	equ	0xFFA
   705                           tblptru	equ	0xFF8
   706                           tblptrh	equ	0xFF7
   707                           tblptrl	equ	0xFF6
   708                           tablat	equ	0xFF5
   709                           prodh	equ	0xFF4
   710                           prodl	equ	0xFF3
   711                           intcon	equ	0xFF2
   712                           intcon2	equ	0xFF1
   713                           intcon3	equ	0xFF0
   714                           postinc0	equ	0xFEE
   715                           fsr0h	equ	0xFEA
   716                           fsr0l	equ	0xFE9
   717                           wreg	equ	0xFE8
   718                           fsr1h	equ	0xFE2
   719                           fsr1l	equ	0xFE1
   720                           fsr2h	equ	0xFDA
   721                           fsr2l	equ	0xFD9
   722                           status	equ	0xFD8
   723                           pclatu	equ	0xFFB
   724                           pclath	equ	0xFFA
   725                           tblptru	equ	0xFF8
   726                           tblptrh	equ	0xFF7
   727                           tblptrl	equ	0xFF6
   728                           tablat	equ	0xFF5
   729                           prodh	equ	0xFF4
   730                           prodl	equ	0xFF3
   731                           intcon	equ	0xFF2
   732                           intcon2	equ	0xFF1
   733                           intcon3	equ	0xFF0
   734                           postinc0	equ	0xFEE
   735                           fsr0h	equ	0xFEA
   736                           fsr0l	equ	0xFE9
   737                           wreg	equ	0xFE8
   738                           fsr1h	equ	0xFE2
   739                           fsr1l	equ	0xFE1
   740                           fsr2h	equ	0xFDA
   741                           fsr2l	equ	0xFD9
   742                           status	equ	0xFD8
   743                           
   744                           	psect	rparam
   745  0000                     pclatu	equ	0xFFB
   746                           pclath	equ	0xFFA
   747                           tblptru	equ	0xFF8
   748                           tblptrh	equ	0xFF7
   749                           tblptrl	equ	0xFF6
   750                           tablat	equ	0xFF5
   751                           prodh	equ	0xFF4
   752                           prodl	equ	0xFF3
   753                           intcon	equ	0xFF2
   754                           intcon2	equ	0xFF1
   755                           intcon3	equ	0xFF0
   756                           postinc0	equ	0xFEE
   757                           fsr0h	equ	0xFEA
   758                           fsr0l	equ	0xFE9
   759                           wreg	equ	0xFE8
   760                           fsr1h	equ	0xFE2
   761                           fsr1l	equ	0xFE1
   762                           fsr2h	equ	0xFDA
   763                           fsr2l	equ	0xFD9
   764                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    4
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F      E      1A       1       27.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      20        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Thu Jun 18 20:28:57 2015

                      _i 000F              __CFG_BOR$ON 000000                       _nl 0013  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l144 09C2  
           __CFG_CPB$OFF 000000                      _RB0 007C08                      _RC1 007C11  
                    _RA5 007C05                      _RC2 007C12                      _RC3 007C13  
                    _RC6 007C16                      _RC7 007C17             __CFG_CPD$OFF 000000  
                    _isr 0008                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _ADIE 007CEE                     _ADIF 007CF6  
                   ?_isr 0001                     _ADIP 007CFE                     _CSEN 007B1D  
                   _IPEN 007E87                     _PEIE 007F96                     _RBIE 007F93  
                   _RBIF 007F90                     _RBIP 007F88                     _RDPU 007C27  
                   _TMR3 000FB2                     _SPEN 007D5F             __CFG_WDTPS$1 000000  
                   _TXEN 007D65             __CFG_PWRT$ON 000000                     _data 0019  
                   _main 093C                     _ipus 0800                     _open 00D1  
                   _time 0017                     _warn 00D3                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     fsr2l 000FD9                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 0014  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000                    ??_isr 0001  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
                  _CMCON 000FB4                    _T0CON 000FD5                    _T3CON 000FB1  
         __CFG_DEBUG$OFF 000000                    _CVREN 007DAF                    _CVROE 007DAE  
                  i2l130 0888                    i2l131 0892                    i2l140 0902  
                  i2l132 089C                    i2l133 0900                    i2l134 08C2  
                  i2l135 08FE                    i2l127 0844                    i2l136 08D6  
                  i2l128 0844                    i2l137 08FC                    i2l129 086A  
                  i2l138 08FA                    i2l139 0902                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTD 000F83            __CFG_USBDIV$2 000000  
                  _USBEN 007B6B                    _SPPEN 007B28                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96                    _SSPEN 007E35            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000                    _nRBPU 007F8F  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _close 00D0           __pbitbssCOMRAM 00D0  
                  tablat 000FF5                    status 000FD8           __CFG_ICPRT$OFF 000000  
        __initialization 09C4             __end_of_main 09C4             __end_of_ipus 0804  
                 ??_main 000F            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _CLK1EN 007B1C  
                 _INT0IE 007F94                   _INT0IF 007F91                   _INT1IE 007F83  
                 _INT1IF 007F80                   _INT2IE 007F84                   _INT2IF 007F81  
                 _INT1IP 007F86                   _INT2IP 007F87                   i2l1150 0840  
                 i2l1160 085E                   i2l1152 084C                   i2l1170 0888  
                 i2l1154 084E                   i2l1162 086A                   i2l1180 08B6  
                 i2l1172 0890                   i2l1164 0872                   i2l1156 0856  
                 i2l1148 0838                   i2l1190 08EA                   i2l1182 08BE  
                 i2l1174 089A                   i2l1166 0874                   i2l1158 085A  
                 i2l1192 08F2                   i2l1184 08CE                   i2l1176 08A4  
                 i2l1168 087C                   i2l1194 08F6                   i2l1186 08D6  
                 i2l1178 08B0                   i2l1188 08DA                   i2l1196 0900  
                 _TMR0IE 007F95                   _TMR0IF 007F92                   _TMR0IP 007F8A  
                 _TMR3IE 007D01                   _TMR3IF 007D09                   _TMR3IP 007D11  
                 i2u1_40 0840                   i2u1_41 083E                   i2u2_40 084C  
                 i2u2_41 084A                   i2u3_40 0872                   i2u3_41 0870  
                 i2u4_40 0890                   i2u4_41 088E                   i2u5_40 089A  
                 i2u5_41 0898                   i2u6_40 08A4                   i2u6_41 08A2  
                 i2u7_40 08B0                   i2u7_41 08AE                   i2u8_40 08CE  
                 i2u8_41 08CC                   i2u9_40 08EA                   i2u9_41 08E8  
         __CFG_XINST$OFF 000000                   clear_0 09CC                   _sleepy 00D2  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 09D2  
        __CFG_PBADEN$OFF 000000           __pcstackCOMRAM 0001                  _CCP1CON 000FBD  
                _CCP2CON 000FBA                  _INTEDG0 007F8E                  _INTEDG1 007F8D  
                _INTEDG2 007F8C          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0800          __CFG_STVREN$OFF 000000  
                __pcinit 09C4                  __ramtop 0800                  __ptext0 093C  
           __size_of_isr 0934           __pintcode_body 0806     end_of_initialization 09D2  
          __Lmediumconst 0000                  int_func 0806                  postinc0 000FEE  
    start_initialization 09C4              __end_of_isr 093C         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 000F                __pintcode 0008              __smallconst 0800  
               __Hrparam 0000                 __Lrparam 0000    __CFG_FOSC$INTOSCIO_EC 000000  
          __size_of_main 0088    __CFG_CPUDIV$OSC4_PLL6 000000               _INTCONbits 000FF2  
               intlevel2 0000  
