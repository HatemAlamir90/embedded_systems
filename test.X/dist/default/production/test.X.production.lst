

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun May 22 08:05:03 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     6                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     	;# 
    17  0001                     	;# 
    18  0002                     	;# 
    19  0003                     	;# 
    20  0004                     	;# 
    21  0005                     	;# 
    22  0006                     	;# 
    23  0007                     	;# 
    24  0008                     	;# 
    25  0009                     	;# 
    26  000A                     	;# 
    27  000B                     	;# 
    28  000C                     	;# 
    29  000D                     	;# 
    30  000E                     	;# 
    31  000E                     	;# 
    32  000F                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0014                     	;# 
    38  0015                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0017                     	;# 
    42  0018                     	;# 
    43  0019                     	;# 
    44  001A                     	;# 
    45  001B                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  001D                     	;# 
    49  001E                     	;# 
    50  001F                     	;# 
    51  0081                     	;# 
    52  0085                     	;# 
    53  0086                     	;# 
    54  0087                     	;# 
    55  0088                     	;# 
    56  0089                     	;# 
    57  008C                     	;# 
    58  008D                     	;# 
    59  008E                     	;# 
    60  0091                     	;# 
    61  0092                     	;# 
    62  0093                     	;# 
    63  0094                     	;# 
    64  0098                     	;# 
    65  0099                     	;# 
    66  009C                     	;# 
    67  009D                     	;# 
    68  009E                     	;# 
    69  009F                     	;# 
    70  010C                     	;# 
    71  010D                     	;# 
    72  010E                     	;# 
    73  010F                     	;# 
    74  018C                     	;# 
    75  018D                     	;# 
    76  001F                     _ADCON0	set	31
    77  0017                     _CCP1CON	set	23
    78  001D                     _CCP2CON	set	29
    79  000B                     _INTCON	set	11
    80  000C                     _PIR1	set	12
    81  000D                     _PIR2	set	13
    82  0010                     _T1CON	set	16
    83  0012                     _T2CON	set	18
    84  0001                     _TMR0	set	1
    85  000F                     _TMR1H	set	15
    86  000E                     _TMR1L	set	14
    87  005F                     _GIE	set	95
    88  0059                     _INTF	set	89
    89  002D                     _RA5	set	45
    90  0034                     _RB4	set	52
    91  0058                     _RBIF	set	88
    92  0038                     _RC0	set	56
    93  0039                     _RC1	set	57
    94  003A                     _RC2	set	58
    95  003B                     _RC3	set	59
    96  0040                     _RD0	set	64
    97  0041                     _RD1	set	65
    98  00C7                     _SPEN	set	199
    99  00A5                     _SSPEN	set	165
   100  0060                     _TMR1IF	set	96
   101  0080                     _TMR1ON	set	128
   102  009F                     _ADCON1	set	159
   103  009C                     _CMCON	set	156
   104  009D                     _CVRCON	set	157
   105  0081                     _OPTION_REG	set	129
   106  008C                     _PIE1	set	140
   107  008D                     _PIE2	set	141
   108  0092                     _PR2	set	146
   109  0085                     _TRISA	set	133
   110  0086                     _TRISB	set	134
   111  0087                     _TRISC	set	135
   112  0088                     _TRISD	set	136
   113  0089                     _TRISE	set	137
   114                           
   115                           ; #config settings
   116  0000                     
   117                           	psect	cinit
   118  0015                     start_initialization:	
   119  0015                     __initialization:	
   120                           
   121                           ; Clear objects allocated to BITCOMMON
   122  0015  01FD               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   123                           
   124                           ; Clear objects allocated to BITBANK0
   125  0016  01A0               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   126                           
   127                           ; Clear objects allocated to BANK0
   128  0017  01A1               	clrf	__pbssBANK0& (0+127)
   129  0018                     end_of_initialization:	
   130                           ;End of C runtime variable initialization code
   131                           
   132  0018                     __end_of__initialization:	
   133  0018  0183               	clrf	3
   134  0019  120A  118A  28A1   	ljmp	_main	;jump to C main() function
   135                           
   136                           	psect	bitbssCOMMON
   137  03E8                     __pbitbssCOMMON:	
   138  03E8                     _mot_high:	
   139  03E8                     	ds	1
   140  03E9                     isr@mot_is_left:	
   141  03E9                     	ds	1
   142  03EA                     isr@mot_is_on:	
   143  03EA                     	ds	1
   144                           
   145                           	psect	bitbssBANK0
   146  0100                     __pbitbssBANK0:	
   147  0100                     _mot_rot:	
   148  0100                     	ds	1
   149                           
   150                           	psect	bssBANK0
   151  0021                     __pbssBANK0:	
   152  0021                     _seconds:	
   153  0021                     	ds	1
   154                           
   155                           	psect	cstackCOMMON
   156  0070                     __pcstackCOMMON:	
   157  0070                     ?_init:	
   158  0070                     ?_main:	
   159                           ; 1 bytes @ 0x0
   160                           
   161  0070                     ?_isr:	
   162                           ; 1 bytes @ 0x0
   163                           
   164  0070                     ?___lwmod:	
   165                           ; 1 bytes @ 0x0
   166                           
   167  0070                     ___lwmod@divisor:	
   168                           ; 2 bytes @ 0x0
   169                           
   170                           
   171                           ; 2 bytes @ 0x0
   172  0070                     	ds	2
   173  0072                     ___lwmod@dividend:	
   174                           
   175                           ; 2 bytes @ 0x2
   176  0072                     	ds	2
   177  0074                     ??___lwmod:	
   178                           
   179                           ; 1 bytes @ 0x4
   180  0074                     	ds	1
   181  0075                     ___lwmod@counter:	
   182                           
   183                           ; 1 bytes @ 0x5
   184  0075                     	ds	1
   185  0076                     ??_isr:	
   186                           
   187                           ; 1 bytes @ 0x6
   188  0076                     	ds	7
   189                           
   190                           	psect	cstackBANK0
   191  0000                     __pcstackBANK0:	
   192  0000                     ??_init:	
   193  0000                     ??_main:	
   194                           ; 1 bytes @ 0x0
   195                           
   196                           
   197                           	psect	maintext
   198  00A1                     __pmaintext:	
   199                           ; 1 bytes @ 0x0
   200 ;;
   201 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   202 ;;
   203 ;; *************** function _main *****************
   204 ;; Defined at:
   205 ;;		line 49 in file "test.c"
   206 ;; Parameters:    Size  Location     Type
   207 ;;		None
   208 ;; Auto vars:     Size  Location     Type
   209 ;;		None
   210 ;; Return value:  Size  Location     Type
   211 ;;                  1    wreg      void 
   212 ;; Registers used:
   213 ;;		wreg, status,2, status,0, pclath, cstack
   214 ;; Tracked objects:
   215 ;;		On entry : B00/0
   216 ;;		On exit  : 0/0
   217 ;;		Unchanged: 0/0
   218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   219 ;;      Params:         0       0       0       0       0
   220 ;;      Locals:         0       0       0       0       0
   221 ;;      Temps:          0       0       0       0       0
   222 ;;      Totals:         0       0       0       0       0
   223 ;;Total ram usage:        0 bytes
   224 ;; Hardware stack levels required when called:    3
   225 ;; This function calls:
   226 ;;		_init
   227 ;; This function is called by:
   228 ;;		Startup code after reset
   229 ;; This function uses a non-reentrant model
   230 ;;
   231                           
   232                           
   233                           ;psect for function _main
   234  00A1                     _main:	
   235                           
   236                           ;test.c: 51: (GIE = 0);
   237                           
   238                           ;incstack = 0
   239                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   240  00A1  138B               	bcf	11,7	;volatile
   241                           
   242                           ;test.c: 61: INTCON = 0x58;
   243  00A2  3058               	movlw	88
   244  00A3  008B               	movwf	11	;volatile
   245                           
   246                           ;test.c: 67: PIE1 = 0x03;
   247  00A4  3003               	movlw	3
   248  00A5  1683               	bsf	3,5	;RP0=1, select bank1
   249  00A6  1303               	bcf	3,6	;RP1=0, select bank1
   250  00A7  008C               	movwf	12	;volatile
   251                           
   252                           ;test.c: 68: PIE2 = 0x00;
   253  00A8  018D               	clrf	13	;volatile
   254                           
   255                           ;test.c: 70: PIR1 = 0x00;
   256  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   257  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   258  00AB  018C               	clrf	12	;volatile
   259                           
   260                           ;test.c: 71: PIR2 = 0x00;
   261  00AC  018D               	clrf	13	;volatile
   262                           
   263                           ;test.c: 81: OPTION_REG = 0x0F;
   264  00AD  300F               	movlw	15
   265  00AE  1683               	bsf	3,5	;RP0=1, select bank1
   266  00AF  1303               	bcf	3,6	;RP1=0, select bank1
   267  00B0  0081               	movwf	1	;volatile
   268                           
   269                           ;test.c: 84: ADCON0 = 0x00;
   270  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   271  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   272  00B3  019F               	clrf	31	;volatile
   273                           
   274                           ;test.c: 85: ADCON1 = 0x07;
   275  00B4  3007               	movlw	7
   276  00B5  1683               	bsf	3,5	;RP0=1, select bank1
   277  00B6  1303               	bcf	3,6	;RP1=0, select bank1
   278  00B7  009F               	movwf	31	;volatile
   279                           
   280                           ;test.c: 86: CMCON = 0x07;
   281  00B8  3007               	movlw	7
   282  00B9  009C               	movwf	28	;volatile
   283                           
   284                           ;test.c: 87: CVRCON = 0x00;
   285  00BA  019D               	clrf	29	;volatile
   286                           
   287                           ;test.c: 88: SSPEN = 0b0;
   288  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   289  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   290  00BD  1294               	bcf	20,5	;volatile
   291                           
   292                           ;test.c: 89: TRISA = 0x00;
   293  00BE  1683               	bsf	3,5	;RP0=1, select bank1
   294  00BF  1303               	bcf	3,6	;RP1=0, select bank1
   295  00C0  0185               	clrf	5	;volatile
   296                           
   297                           ;test.c: 92: TRISB = 0xFF;
   298  00C1  30FF               	movlw	255
   299  00C2  0086               	movwf	6	;volatile
   300                           
   301                           ;test.c: 95: CCP1CON = 0x00;
   302  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   303  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   304  00C5  0197               	clrf	23	;volatile
   305                           
   306                           ;test.c: 96: CCP2CON = 0x00;
   307  00C6  019D               	clrf	29	;volatile
   308                           
   309                           ;test.c: 97: SPEN = 0b0;
   310  00C7  1398               	bcf	24,7	;volatile
   311                           
   312                           ;test.c: 98: TRISC = 0x00;
   313  00C8  1683               	bsf	3,5	;RP0=1, select bank1
   314  00C9  1303               	bcf	3,6	;RP1=0, select bank1
   315  00CA  0187               	clrf	7	;volatile
   316                           
   317                           ;test.c: 101: TRISD = 0x00;
   318  00CB  0188               	clrf	8	;volatile
   319                           
   320                           ;test.c: 104: TRISE = 0x07;
   321  00CC  3007               	movlw	7
   322  00CD  0089               	movwf	9	;volatile
   323                           
   324                           ;test.c: 106: TMR0 = 0x00;
   325  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   326  00CF  1303               	bcf	3,6	;RP1=0, select bank0
   327  00D0  0181               	clrf	1	;volatile
   328                           
   329                           ;test.c: 115: T1CON = 0x30;
   330  00D1  3030               	movlw	48
   331  00D2  0090               	movwf	16	;volatile
   332                           
   333                           ;test.c: 118: T2CON = 0x7B;
   334  00D3  307B               	movlw	123
   335  00D4  0092               	movwf	18	;volatile
   336                           
   337                           ;test.c: 119: PR2 = 0xFF;
   338  00D5  30FF               	movlw	255
   339  00D6  1683               	bsf	3,5	;RP0=1, select bank1
   340  00D7  1303               	bcf	3,6	;RP1=0, select bank1
   341  00D8  0092               	movwf	18	;volatile
   342                           
   343                           ;test.c: 121: init();
   344  00D9  120A  118A  2112  120A  118A  	fcall	_init
   345                           
   346                           ;test.c: 122: (GIE = 1);
   347  00DE  178B               	bsf	11,7	;volatile
   348  00DF                     l89:	
   349                           ;test.c: 124: while(1);
   350                           
   351  00DF  28DF               	goto	l89
   352  00E0                     __end_of_main:	
   353                           
   354                           	psect	text1
   355  0112                     __ptext1:	
   356 ;; *************** function _init *****************
   357 ;; Defined at:
   358 ;;		line 131 in file "test.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;                  1    wreg      void 
   365 ;; Registers used:
   366 ;;		status,2
   367 ;; Tracked objects:
   368 ;;		On entry : 0/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   372 ;;      Params:         0       0       0       0       0
   373 ;;      Locals:         0       0       0       0       0
   374 ;;      Temps:          0       0       0       0       0
   375 ;;      Totals:         0       0       0       0       0
   376 ;;Total ram usage:        0 bytes
   377 ;; Hardware stack levels used:    1
   378 ;; Hardware stack levels required when called:    2
   379 ;; This function calls:
   380 ;;		Nothing
   381 ;; This function is called by:
   382 ;;		_main
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           
   387                           ;psect for function _init
   388  0112                     _init:	
   389                           
   390                           ;test.c: 134: seconds = 0x00;
   391                           
   392                           ;incstack = 0
   393                           ; Regs used in _init: [status,2]
   394  0112  1283               	bcf	3,5	;RP0=0, select bank0
   395  0113  1303               	bcf	3,6	;RP1=0, select bank0
   396  0114  01A1               	clrf	_seconds	;volatile
   397                           
   398                           ;test.c: 137: RC0 = !0b1;
   399  0115  1007               	bcf	7,0	;volatile
   400                           
   401                           ;test.c: 138: RC1 = !0b1;
   402  0116  1087               	bcf	7,1	;volatile
   403                           
   404                           ;test.c: 139: RC2 = 0b1;
   405  0117  1507               	bsf	7,2	;volatile
   406                           
   407                           ;test.c: 140: mot_rot = 0b0;
   408  0118  1020               	bcf	_mot_rot/(0+8),_mot_rot& (0+7)	;volatile
   409                           
   410                           ;test.c: 141: mot_high = 0b0;
   411  0119  107D               	bcf	_mot_high/(0+8),_mot_high& (0+7)	;volatile
   412                           
   413                           ;test.c: 143: RD1 = !0b1;
   414  011A  1088               	bcf	8,1	;volatile
   415                           
   416                           ;test.c: 145: RD0 = !0b1;
   417  011B  1008               	bcf	8,0	;volatile
   418                           
   419                           ;test.c: 147: RA5 = !0b1;
   420  011C  1285               	bcf	5,5	;volatile
   421                           
   422                           ;test.c: 149: TMR1L = 0x00;
   423  011D  018E               	clrf	14	;volatile
   424                           
   425                           ;test.c: 150: TMR1H = 0x00;
   426  011E  018F               	clrf	15	;volatile
   427                           
   428                           ;test.c: 151: TMR1ON = 0b1;
   429  011F  1410               	bsf	16,0	;volatile
   430  0120  0008               	return
   431  0121                     __end_of_init:	
   432                           
   433                           	psect	text2
   434  001C                     __ptext2:	
   435 ;; *************** function _isr *****************
   436 ;; Defined at:
   437 ;;		line 155 in file "test.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;		None
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		wreg, status,2, status,0, pclath, cstack
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   451 ;;      Params:         0       0       0       0       0
   452 ;;      Locals:         0       0       0       0       0
   453 ;;      Temps:          7       0       0       0       0
   454 ;;      Totals:         7       0       0       0       0
   455 ;;Total ram usage:        7 bytes
   456 ;; Hardware stack levels used:    1
   457 ;; Hardware stack levels required when called:    1
   458 ;; This function calls:
   459 ;;		___lwmod
   460 ;; This function is called by:
   461 ;;		Interrupt level 1
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465                           
   466                           ;psect for function _isr
   467  001C                     _isr:	
   468                           
   469                           ;test.c: 157: static bit mot_is_on;
   470                           ;test.c: 158: static bit mot_is_left;
   471                           ;test.c: 160: if(TMR1IF == 0b1)
   472  001C  1C0C               	btfss	12,0	;volatile
   473  001D  2854               	goto	i1l102
   474                           
   475                           ;test.c: 161: {
   476                           ;test.c: 163: seconds++;
   477  001E  3001               	movlw	1
   478  001F  00F6               	movwf	??_isr
   479  0020  0876               	movf	??_isr,w
   480  0021  07A1               	addwf	_seconds,f	;volatile
   481                           
   482                           ;test.c: 166: if(mot_rot && !mot_high && ((seconds % 3u) == 0))
   483  0022  1820               	btfsc	_mot_rot/(0+8),_mot_rot& (0+7)	;volatile
   484  0023  187D               	btfsc	_mot_high/(0+8),_mot_high& (0+7)	;volatile
   485  0024  284C               	goto	i1l103
   486  0025  3003               	movlw	3
   487  0026  00F0               	movwf	___lwmod@divisor
   488  0027  3000               	movlw	0
   489  0028  00F1               	movwf	___lwmod@divisor+1
   490  0029  0821               	movf	_seconds,w	;volatile
   491  002A  00F6               	movwf	??_isr
   492  002B  01F7               	clrf	??_isr+1
   493  002C  0876               	movf	??_isr,w
   494  002D  00F2               	movwf	___lwmod@dividend
   495  002E  0877               	movf	??_isr+1,w
   496  002F  00F3               	movwf	___lwmod@dividend+1
   497  0030  120A  118A  20E0  120A  118A  	fcall	___lwmod
   498  0035  0870               	movf	?___lwmod,w
   499  0036  0471               	iorwf	?___lwmod+1,w
   500  0037  1D03               	btfss	3,2
   501  0038  284C               	goto	i1l103
   502                           
   503                           ;test.c: 167: {
   504                           ;test.c: 168: if(mot_is_on)
   505  0039  1D7D               	btfss	isr@mot_is_on/(0+8),isr@mot_is_on& (0+7)
   506  003A  283E               	goto	i1l960
   507                           
   508                           ;test.c: 169: {
   509                           ;test.c: 170: RC0 = !0b1;
   510  003B  1283               	bcf	3,5	;RP0=0, select bank0
   511  003C  1303               	bcf	3,6	;RP1=0, select bank0
   512  003D  2851               	goto	i1l968
   513  003E                     i1l960:	
   514                           ;test.c: 172: }
   515                           
   516                           ;test.c: 171: mot_is_on = 0b0;
   517                           
   518                           
   519                           ;test.c: 173: else
   520                           ;test.c: 174: {
   521                           ;test.c: 175: mot_is_left ^= 0b1;
   522  003E  3002               	movlw	(0+1) shl (isr@mot_is_left& (0+7))
   523  003F  06FD               	xorwf	isr@mot_is_left/(0+8),f
   524                           
   525                           ;test.c: 176: if(mot_is_left)
   526  0040  1CFD               	btfss	isr@mot_is_left/(0+8),isr@mot_is_left& (0+7)
   527  0041  2846               	goto	i1l106
   528                           
   529                           ;test.c: 177: RC2 = !0b1;
   530  0042  1283               	bcf	3,5	;RP0=0, select bank0
   531  0043  1303               	bcf	3,6	;RP1=0, select bank0
   532  0044  1107               	bcf	7,2	;volatile
   533  0045  2849               	goto	i1l107
   534  0046                     i1l106:	
   535                           
   536                           ;test.c: 178: else
   537                           ;test.c: 179: RC2 = 0b1;
   538  0046  1283               	bcf	3,5	;RP0=0, select bank0
   539  0047  1303               	bcf	3,6	;RP1=0, select bank0
   540  0048  1507               	bsf	7,2	;volatile
   541  0049                     i1l107:	
   542                           
   543                           ;test.c: 180: RC0 = 0b1;
   544  0049  1407               	bsf	7,0	;volatile
   545                           
   546                           ;test.c: 181: mot_is_on = 0b1;
   547  004A  157D               	bsf	isr@mot_is_on/(0+8),isr@mot_is_on& (0+7)
   548                           
   549                           ;test.c: 182: }
   550                           ;test.c: 183: }
   551  004B  2853               	goto	i1l108
   552  004C                     i1l103:	
   553                           
   554                           ;test.c: 184: else if(!mot_rot && mot_is_on)
   555  004C  1283               	bcf	3,5	;RP0=0, select bank0
   556  004D  1303               	bcf	3,6	;RP1=0, select bank0
   557  004E  1C20               	btfss	_mot_rot/(0+8),_mot_rot& (0+7)	;volatile
   558  004F  1D7D               	btfss	isr@mot_is_on/(0+8),isr@mot_is_on& (0+7)
   559  0050  2853               	goto	i1l108
   560  0051                     i1l968:	
   561                           
   562                           ;test.c: 185: {
   563                           ;test.c: 186: RC0 = !0b1;
   564  0051  1007               	bcf	7,0	;volatile
   565                           
   566                           ;test.c: 187: mot_is_on = 0b0;
   567  0052  117D               	bcf	isr@mot_is_on/(0+8),isr@mot_is_on& (0+7)
   568  0053                     i1l108:	
   569                           
   570                           ;test.c: 188: }
   571                           ;test.c: 189: TMR1IF = 0b0;
   572  0053  100C               	bcf	12,0	;volatile
   573  0054                     i1l102:	
   574                           
   575                           ;test.c: 190: }
   576                           ;test.c: 192: if(INTF)
   577  0054  1C8B               	btfss	11,1	;volatile
   578  0055  286A               	goto	i1l978
   579                           
   580                           ;test.c: 193: {
   581                           ;test.c: 194: if(!mot_rot)
   582  0056  1820               	btfsc	_mot_rot/(0+8),_mot_rot& (0+7)	;volatile
   583  0057  285E               	goto	i1l111
   584                           
   585                           ;test.c: 195: {
   586                           ;test.c: 196: RC2 = 0b1;
   587  0058  1507               	bsf	7,2	;volatile
   588                           
   589                           ;test.c: 197: mot_is_left = 0b0;
   590  0059  10FD               	bcf	isr@mot_is_left/(0+8),isr@mot_is_left& (0+7)
   591                           
   592                           ;test.c: 198: RC0 = 0b1;
   593  005A  1407               	bsf	7,0	;volatile
   594                           
   595                           ;test.c: 199: mot_rot = 0b1;
   596  005B  1420               	bsf	_mot_rot/(0+8),_mot_rot& (0+7)	;volatile
   597                           
   598                           ;test.c: 200: mot_is_on = 0b1;
   599  005C  157D               	bsf	isr@mot_is_on/(0+8),isr@mot_is_on& (0+7)
   600                           
   601                           ;test.c: 201: }
   602  005D  2861               	goto	i1l974
   603  005E                     i1l111:	
   604                           
   605                           ;test.c: 202: else
   606                           ;test.c: 203: {
   607                           ;test.c: 204: RC0 = !0b1;
   608  005E  1007               	bcf	7,0	;volatile
   609                           
   610                           ;test.c: 205: mot_rot = 0b0;
   611  005F  1020               	bcf	_mot_rot/(0+8),_mot_rot& (0+7)	;volatile
   612                           
   613                           ;test.c: 206: mot_is_on = 0b0;
   614  0060  117D               	bcf	isr@mot_is_on/(0+8),isr@mot_is_on& (0+7)
   615  0061                     i1l974:	
   616                           
   617                           ;test.c: 207: }
   618                           ;test.c: 208: _delay((unsigned long)((150)*(4000000/4000.0)));
   619  0061  30C3               	movlw	195
   620  0062  00F7               	movwf	??_isr+1
   621  0063  30CD               	movlw	205
   622  0064  00F6               	movwf	??_isr
   623  0065                     u61_27:	
   624  0065  0BF6               	decfsz	??_isr,f
   625  0066  2865               	goto	u61_27
   626  0067  0BF7               	decfsz	??_isr+1,f
   627  0068  2865               	goto	u61_27
   628                           
   629                           ;test.c: 209: INTF = 0b0;
   630  0069  108B               	bcf	11,1	;volatile
   631  006A                     i1l978:	
   632                           
   633                           ;test.c: 210: }
   634                           ;test.c: 212: if(RBIF)
   635  006A  1C0B               	btfss	11,0	;volatile
   636  006B  2894               	goto	i1l118
   637                           
   638                           ;test.c: 213: {
   639                           ;test.c: 215: if(0b0 == RB4)
   640  006C  1283               	bcf	3,5	;RP0=0, select bank0
   641  006D  1303               	bcf	3,6	;RP1=0, select bank0
   642  006E  1A06               	btfsc	6,4	;volatile
   643  006F  2893               	goto	i1l114
   644                           
   645                           ;test.c: 216: {
   646                           ;test.c: 217: RC3 ^= 0b1;
   647  0070  3008               	movlw	8
   648  0071  0687               	xorwf	7,f
   649                           
   650                           ;test.c: 218: mot_high ^= 0b1;
   651  0072  3001               	movlw	(0+1) shl (_mot_high& (0+7))
   652  0073  06FD               	xorwf	_mot_high/(0+8),f
   653                           
   654                           ;test.c: 219: if(0b1 == mot_high)
   655  0074  1C7D               	btfss	_mot_high/(0+8),_mot_high& (0+7)	;volatile
   656  0075  288F               	goto	i1l115
   657                           
   658                           ;test.c: 220: {
   659                           ;test.c: 221: if(mot_is_left)
   660  0076  1CFD               	btfss	isr@mot_is_left/(0+8),isr@mot_is_left& (0+7)
   661  0077  2886               	goto	i1l992
   662                           
   663                           ;test.c: 222: {
   664                           ;test.c: 223: RC0 = !0b1;
   665  0078  1007               	bcf	7,0	;volatile
   666                           
   667                           ;test.c: 224: _delay((unsigned long)((2000)*(4000000/4000.0)));
   668  0079  300B               	movlw	11
   669  007A  00F8               	movwf	??_isr+2
   670  007B  3026               	movlw	38
   671  007C  00F7               	movwf	??_isr+1
   672  007D  3066               	movlw	102
   673  007E  00F6               	movwf	??_isr
   674  007F                     u62_27:	
   675  007F  0BF6               	decfsz	??_isr,f
   676  0080  287F               	goto	u62_27
   677  0081  0BF7               	decfsz	??_isr+1,f
   678  0082  287F               	goto	u62_27
   679  0083  0BF8               	decfsz	??_isr+2,f
   680  0084  287F               	goto	u62_27
   681  0085  2886               	nop2
   682  0086                     i1l992:	
   683                           
   684                           ;test.c: 225: }
   685                           ;test.c: 226: RC2 = 0b1;
   686  0086  1283               	bcf	3,5	;RP0=0, select bank0
   687  0087  1303               	bcf	3,6	;RP1=0, select bank0
   688  0088  1507               	bsf	7,2	;volatile
   689                           
   690                           ;test.c: 227: mot_is_left = 0b0;
   691  0089  10FD               	bcf	isr@mot_is_left/(0+8),isr@mot_is_left& (0+7)
   692                           
   693                           ;test.c: 228: RC1 = 0b1;
   694  008A  1487               	bsf	7,1	;volatile
   695                           
   696                           ;test.c: 229: RC0 = 0b1;
   697  008B  1407               	bsf	7,0	;volatile
   698                           
   699                           ;test.c: 230: mot_rot = 0b1;
   700  008C  1420               	bsf	_mot_rot/(0+8),_mot_rot& (0+7)	;volatile
   701                           
   702                           ;test.c: 231: mot_is_on = 0b1;
   703  008D  157D               	bsf	isr@mot_is_on/(0+8),isr@mot_is_on& (0+7)
   704                           
   705                           ;test.c: 232: }
   706  008E  2893               	goto	i1l114
   707  008F                     i1l115:	
   708                           
   709                           ;test.c: 233: else
   710                           ;test.c: 234: {
   711                           ;test.c: 235: RC1 = !0b1;
   712  008F  1087               	bcf	7,1	;volatile
   713                           
   714                           ;test.c: 236: RC0 = !0b1;
   715  0090  1007               	bcf	7,0	;volatile
   716                           
   717                           ;test.c: 237: mot_rot = 0b0;
   718  0091  1020               	bcf	_mot_rot/(0+8),_mot_rot& (0+7)	;volatile
   719                           
   720                           ;test.c: 238: mot_is_on = 0b0;
   721  0092  117D               	bcf	isr@mot_is_on/(0+8),isr@mot_is_on& (0+7)
   722  0093                     i1l114:	
   723                           
   724                           ;test.c: 239: }
   725                           ;test.c: 240: }
   726                           ;test.c: 241: RBIF = 0b0;
   727  0093  100B               	bcf	11,0	;volatile
   728  0094                     i1l118:	
   729  0094  087C               	movf	??_isr+6,w
   730  0095  1283               	bcf	3,5	;RP0=0, select bank0
   731  0096  1303               	bcf	3,6	;RP1=0, select bank0
   732  0097  00FF               	movwf	127
   733  0098  087B               	movf	??_isr+5,w
   734  0099  008A               	movwf	10
   735  009A  087A               	movf	??_isr+4,w
   736  009B  0084               	movwf	4
   737  009C  0E79               	swapf	(??_isr+3)^(0+-128),w
   738  009D  0083               	movwf	3
   739  009E  0EFE               	swapf	126,f
   740  009F  0E7E               	swapf	126,w
   741  00A0  0009               	retfie
   742  00A1                     __end_of_isr:	
   743                           
   744                           	psect	intentry
   745  0004                     __pintentry:	
   746                           ;incstack = 0
   747                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   748                           
   749  0004                     interrupt_function:	
   750  007E                     saved_w	set	btemp
   751  0004  00FE               	movwf	btemp
   752  0005  0E03               	swapf	3,w
   753  0006  00F9               	movwf	??_isr+3
   754  0007  0804               	movf	4,w
   755  0008  00FA               	movwf	??_isr+4
   756  0009  080A               	movf	10,w
   757  000A  00FB               	movwf	??_isr+5
   758  000B  1283               	bcf	3,5	;RP0=0, select bank0
   759  000C  1303               	bcf	3,6	;RP1=0, select bank0
   760  000D  087F               	movf	btemp+1,w
   761  000E  00FC               	movwf	??_isr+6
   762  000F  120A  118A  281C   	ljmp	_isr
   763                           
   764                           	psect	text3
   765  00E0                     __ptext3:	
   766 ;; *************** function ___lwmod *****************
   767 ;; Defined at:
   768 ;;		line 6 in file "/opt/microchip/xc8/v1.37/sources/common/lwmod.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  divisor         2    0[COMMON] unsigned int 
   771 ;;  dividend        2    2[COMMON] unsigned int 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  counter         1    5[COMMON] unsigned char 
   774 ;; Return value:  Size  Location     Type
   775 ;;                  2    0[COMMON] unsigned int 
   776 ;; Registers used:
   777 ;;		wreg, status,2, status,0
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   783 ;;      Params:         4       0       0       0       0
   784 ;;      Locals:         1       0       0       0       0
   785 ;;      Temps:          1       0       0       0       0
   786 ;;      Totals:         6       0       0       0       0
   787 ;;Total ram usage:        6 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; This function calls:
   790 ;;		Nothing
   791 ;; This function is called by:
   792 ;;		_isr
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function ___lwmod
   798  00E0                     ___lwmod:	
   799                           
   800                           ;incstack = 0
   801                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   802  00E0  0870               	movf	___lwmod@divisor,w
   803  00E1  0471               	iorwf	___lwmod@divisor+1,w
   804  00E2  1903               	btfsc	3,2
   805  00E3  290D               	goto	i1l900
   806  00E4  01F5               	clrf	___lwmod@counter
   807  00E5  0AF5               	incf	___lwmod@counter,f
   808  00E6                     i1l890:	
   809  00E6  1BF1               	btfsc	___lwmod@divisor+1,7
   810  00E7  28F4               	goto	i1l892
   811  00E8  3001               	movlw	1
   812  00E9                     u42_25:	
   813  00E9  1003               	clrc
   814  00EA  0DF0               	rlf	___lwmod@divisor,f
   815  00EB  0DF1               	rlf	___lwmod@divisor+1,f
   816  00EC  3EFF               	addlw	-1
   817  00ED  1D03               	skipz
   818  00EE  28E9               	goto	u42_25
   819  00EF  3001               	movlw	1
   820  00F0  00F4               	movwf	??___lwmod
   821  00F1  0874               	movf	??___lwmod,w
   822  00F2  07F5               	addwf	___lwmod@counter,f
   823  00F3  28E6               	goto	i1l890
   824  00F4                     i1l892:	
   825  00F4  0871               	movf	___lwmod@divisor+1,w
   826  00F5  0273               	subwf	___lwmod@dividend+1,w
   827  00F6  1D03               	skipz
   828  00F7  28FA               	goto	u44_25
   829  00F8  0870               	movf	___lwmod@divisor,w
   830  00F9  0272               	subwf	___lwmod@dividend,w
   831  00FA                     u44_25:	
   832  00FA  1C03               	skipc
   833  00FB  2902               	goto	i1l896
   834  00FC  0870               	movf	___lwmod@divisor,w
   835  00FD  02F2               	subwf	___lwmod@dividend,f
   836  00FE  0871               	movf	___lwmod@divisor+1,w
   837  00FF  1C03               	skipc
   838  0100  03F3               	decf	___lwmod@dividend+1,f
   839  0101  02F3               	subwf	___lwmod@dividend+1,f
   840  0102                     i1l896:	
   841  0102  3001               	movlw	1
   842  0103                     u45_25:	
   843  0103  1003               	clrc
   844  0104  0CF1               	rrf	___lwmod@divisor+1,f
   845  0105  0CF0               	rrf	___lwmod@divisor,f
   846  0106  3EFF               	addlw	-1
   847  0107  1D03               	skipz
   848  0108  2903               	goto	u45_25
   849  0109  3001               	movlw	1
   850  010A  02F5               	subwf	___lwmod@counter,f
   851  010B  1D03               	btfss	3,2
   852  010C  28F4               	goto	i1l892
   853  010D                     i1l900:	
   854  010D  0873               	movf	___lwmod@dividend+1,w
   855  010E  00F1               	movwf	?___lwmod+1
   856  010F  0872               	movf	___lwmod@dividend,w
   857  0110  00F0               	movwf	?___lwmod
   858  0111  0008               	return
   859  0112                     __end_of___lwmod:	
   860  007E                     btemp	set	126	;btemp
   861  007E                     wtemp	set	126
   862  007E                     wtemp0	set	126
   863  0080                     wtemp1	set	128
   864  0082                     wtemp2	set	130
   865  0084                     wtemp3	set	132
   866  0086                     wtemp4	set	134
   867  0088                     wtemp5	set	136
   868  007F                     wtemp6	set	127
   869  007E                     ttemp	set	126
   870  007E                     ttemp0	set	126
   871  0081                     ttemp1	set	129
   872  0084                     ttemp2	set	132
   873  0087                     ttemp3	set	135
   874  007F                     ttemp4	set	127
   875  007E                     ltemp	set	126
   876  007E                     ltemp0	set	126
   877  0082                     ltemp1	set	130
   878  0086                     ltemp2	set	134
   879  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      0       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lwmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  7     7      0     362
                                              6 COMMON     7     7      0
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     362
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _isr (ROOT)
   ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       1       4        1.2%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun May 22 08:05:03 2016

            __CFG_CP$OFF 0000                       l89 00DF                      _GIE 005F  
                    _RC0 0038                      _RC1 0039                      _RA5 002D  
                    _RD0 0040                      _RC2 003A                      _RB4 0034  
                    _RD1 0041                      _RC3 003B                      _PR2 0092  
           __CFG_CPD$OFF 0000                      _isr 001C                      fsr0 0004  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000                     ?_isr 0070  
                   _PIE1 008C                     _PIE2 008D                     _INTF 0059  
                   _RBIF 0058                     _PIR1 000C                     _PIR2 000D  
                   _TMR0 0001                     _SPEN 00C7             __CFG_WRT$OFF 0000  
                   _main 00A1                     _init 0112                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0012  
                   ttemp 007E                     wtemp 007E                    ??_isr 0076  
                  ?_main 0070                    ?_init 0070            __CFG_WDTE$OFF 0000  
                  _CMCON 009C                    _T1CON 0010                    _T2CON 0012  
         __CFG_DEBUG$OFF 0000                    i1l102 0054                    i1l111 005E  
                  i1l103 004C                    i1l114 0093                    i1l106 0046  
                  i1l115 008F                    i1l107 0049                    i1l108 0053  
                  i1l118 0094          __end_of___lwmod 0112                    i1l900 010D  
                  i1l960 003E                    i1l890 00E6                    i1l892 00F4  
                  i1l974 0061                    i1l896 0102                    i1l992 0086  
                  i1l968 0051                    i1l978 006A                    _TMR1H 000F  
                  _TMR1L 000E                    u42_25 00E9                    u44_25 00FA  
                  u45_25 0103                    u61_27 0065                    u62_27 007F  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _SSPEN 00A5  
          __CFG_PWRTE$ON 0000           __pbitbssCOMMON 03E8                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 0015  
           __end_of_main 00E0             __end_of_init 0121                   ??_main 0000  
                 ??_init 0000                   _ADCON0 001F                   _ADCON1 009F  
                 _CVRCON 009D                   _INTCON 000B                   _TMR1IF 0060  
                 _TMR1ON 0080                ??___lwmod 0074                   saved_w 007E  
__end_of__initialization 0018           __pcstackCOMMON 0070               __pbssBANK0 0021  
             __pmaintext 00A1               __pintentry 0004                  _CCP1CON 0017  
                _CCP2CON 001D             isr@mot_is_on 03EA                  ___lwmod 00E0  
                __ptext1 0112                  __ptext2 001C                  __ptext3 00E0  
           __size_of_isr 0085                  _seconds 0021                  _mot_rot 0100  
   end_of_initialization 0018            __pbitbssBANK0 0100      start_initialization 0015  
            __end_of_isr 00A1           isr@mot_is_left 03E9                ___latbits 0002  
          __pcstackBANK0 0000                 ?___lwmod 0070        interrupt_function 0004  
       __size_of___lwmod 0032            __size_of_main 003F            __size_of_init 000F  
               _mot_high 03E8                 intlevel1 0000         ___lwmod@dividend 0072  
             _OPTION_REG 0081          ___lwmod@divisor 0070          ___lwmod@counter 0075  
