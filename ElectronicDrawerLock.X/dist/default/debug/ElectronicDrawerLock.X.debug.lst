

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun Apr 24 08:24:04 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F84A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x4E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0006                     	;# 
    26  0008                     	;# 
    27  0009                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  0081                     	;# 
    31  0085                     	;# 
    32  0086                     	;# 
    33  0088                     	;# 
    34  0089                     	;# 
    35                           
    36                           	psect	eeprom_data
    37  0000  0000 00FF 00FF 00FF 00FF 00FF 00FF 00FF 	db	0,255,255,255,255,255,255,255	;# 
    38                           
    39                           	psect	idataBANK0
    40  0212                     __pidataBANK0:	
    41                           
    42                           ;initializer for _master_key
    43  0212  3404               	retlw	4
    44  0213  3405               	retlw	5
    45  0214  3400               	retlw	0
    46  0215  3407               	retlw	7
    47  0216  3403               	retlw	3
    48  0217  3409               	retlw	9
    49  0218  3402               	retlw	2
    50  0219  3407               	retlw	7
    51                           
    52                           	psect	nvBANK0
    53  002C                     __pnvBANK0:	
    54  002C                     _digit_count:	
    55  002C                     	ds	1
    56  0009                     _EEADR	set	9
    57  0008                     _EEDATA	set	8
    58  000B                     _INTCON	set	11
    59  0005                     _PORTA	set	5
    60  0006                     _PORTB	set	6
    61  0018                     _CARRY	set	24
    62  005E                     _EEIE	set	94
    63  005F                     _GIE	set	95
    64  0028                     _RA0	set	40
    65  0029                     _RA1	set	41
    66  002A                     _RA2	set	42
    67  002B                     _RA3	set	43
    68  002C                     _RA4	set	44
    69  0030                     _RB0	set	48
    70  0031                     _RB1	set	49
    71  0032                     _RB2	set	50
    72  0033                     _RB3	set	51
    73  0034                     _RB4	set	52
    74  0035                     _RB5	set	53
    75  0036                     _RB6	set	54
    76  0058                     _RBIF	set	88
    77  005A                     _T0IF	set	90
    78  0088                     _EECON1	set	136
    79  0089                     _EECON2	set	137
    80  0081                     _OPTION_REG	set	129
    81  0085                     _TRISA	set	133
    82  0086                     _TRISB	set	134
    83  0440                     _RD	set	1088
    84  0441                     _WR	set	1089
    85  0442                     _WREN	set	1090
    86                           
    87                           ; #config settings
    88  0000                     
    89                           	psect	cinit
    90  0010                     start_initialization:	
    91  0010                     __initialization:	
    92                           
    93                           ; Clear objects allocated to BANK0
    94  0010  019B               	clrf	__pbssBANK0& (0+127)
    95  0011  019C               	clrf	(__pbssBANK0+1)& (0+127)
    96  0012  019D               	clrf	(__pbssBANK0+2)& (0+127)
    97  0013  019E               	clrf	(__pbssBANK0+3)& (0+127)
    98  0014  019F               	clrf	(__pbssBANK0+4)& (0+127)
    99  0015  01A0               	clrf	(__pbssBANK0+5)& (0+127)
   100  0016  01A1               	clrf	(__pbssBANK0+6)& (0+127)
   101  0017  01A2               	clrf	(__pbssBANK0+7)& (0+127)
   102                           
   103                           ; Clear objects allocated to BITBANK0
   104  0018  01AB               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   105                           
   106                           ; Initialize objects allocated to BANK0
   107  0019  2212               	fcall	__pidataBANK0	;fetch initializer
   108  001A  00A3               	movwf	__pdataBANK0& (0+127)
   109  001B  2213               	fcall	__pidataBANK0+1	;fetch initializer
   110  001C  00A4               	movwf	(__pdataBANK0+1)& (0+127)
   111  001D  2214               	fcall	__pidataBANK0+2	;fetch initializer
   112  001E  00A5               	movwf	(__pdataBANK0+2)& (0+127)
   113  001F  2215               	fcall	__pidataBANK0+3	;fetch initializer
   114  0020  00A6               	movwf	(__pdataBANK0+3)& (0+127)
   115  0021  2216               	fcall	__pidataBANK0+4	;fetch initializer
   116  0022  00A7               	movwf	(__pdataBANK0+4)& (0+127)
   117  0023  2217               	fcall	__pidataBANK0+5	;fetch initializer
   118  0024  00A8               	movwf	(__pdataBANK0+5)& (0+127)
   119  0025  2218               	fcall	__pidataBANK0+6	;fetch initializer
   120  0026  00A9               	movwf	(__pdataBANK0+6)& (0+127)
   121  0027  2219               	fcall	__pidataBANK0+7	;fetch initializer
   122  0028  00AA               	movwf	(__pdataBANK0+7)& (0+127)
   123  0029                     end_of_initialization:	
   124                           ;End of C runtime variable initialization code
   125                           
   126  0029                     __end_of__initialization:	
   127  0029  0183               	clrf	3
   128  002A  296A               	ljmp	_main	;jump to C main() function
   129                           
   130                           	psect	bssBANK0
   131  001B                     __pbssBANK0:	
   132  001B                     _buz_time:	
   133  001B                     	ds	1
   134  001C                     _ch_pres_cnt:	
   135  001C                     	ds	1
   136  001D                     _digit:	
   137  001D                     	ds	1
   138  001E                     _digits_entered:	
   139  001E                     	ds	1
   140  001F                     _last_pres_time_h:	
   141  001F                     	ds	1
   142  0020                     _last_pres_time_l:	
   143  0020                     	ds	1
   144  0021                     _read_digit:	
   145  0021                     	ds	1
   146  0022                     _w_led_time:	
   147  0022                     	ds	1
   148                           
   149                           	psect	dataBANK0
   150  0023                     __pdataBANK0:	
   151  0023                     _master_key:	
   152  0023                     	ds	8
   153                           
   154                           	psect	bitbssBANK0
   155  0158                     __pbitbssBANK0:	
   156  0158                     _but_pres:	
   157  0158                     	ds	1
   158  0159                     _changing:	
   159  0159                     	ds	1
   160  015A                     _open:	
   161  015A                     	ds	1
   162  015B                     _sleeping:	
   163  015B                     	ds	1
   164  015C                     _wrong:	
   165  015C                     	ds	1
   166                           
   167                           	psect	cstackBANK0
   168  000C                     __pcstackBANK0:	
   169  000C                     ?_eeprom_write:	
   170  000C                     ?_eeprom_read:	
   171                           ; 1 bytes @ 0x0
   172                           
   173  000C                     ?_isr:	
   174                           ; 1 bytes @ 0x0
   175                           
   176  000C                     ?_main:	
   177                           ; 1 bytes @ 0x0
   178                           
   179  000C                     ?i1_eeprom_read:	
   180                           ; 1 bytes @ 0x0
   181                           
   182  000C                     ??i1_eeprom_read:	
   183                           ; 1 bytes @ 0x0
   184                           
   185  000C                     eeprom_write@value:	
   186                           ; 1 bytes @ 0x0
   187                           
   188                           
   189                           ; 1 bytes @ 0x0
   190  000C                     	ds	1
   191  000D                     ??_eeprom_write:	
   192  000D                     i1eeprom_read@addr:	
   193                           ; 1 bytes @ 0x1
   194                           
   195                           
   196                           ; 1 bytes @ 0x1
   197  000D                     	ds	1
   198  000E                     eeprom_write@addr:	
   199                           
   200                           ; 1 bytes @ 0x2
   201  000E                     	ds	1
   202  000F                     ??_isr:	
   203                           
   204                           ; 1 bytes @ 0x3
   205  000F                     	ds	7
   206  0016                     ??_eeprom_read:	
   207                           
   208                           ; 1 bytes @ 0xA
   209  0016                     	ds	1
   210  0017                     eeprom_read@addr:	
   211                           
   212                           ; 1 bytes @ 0xB
   213  0017                     	ds	1
   214  0018                     ??_main:	
   215                           
   216                           ; 1 bytes @ 0xC
   217  0018                     	ds	3
   218                           
   219                           	psect	maintext
   220  016A                     __pmaintext:	
   221 ;;
   222 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   223 ;;
   224 ;; *************** function _main *****************
   225 ;; Defined at:
   226 ;;		line 298 in file "electronic_drawer_lock.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;		None
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      void 
   233 ;; Registers used:
   234 ;;		wreg, status,2, status,0, pclath, cstack
   235 ;; Tracked objects:
   236 ;;		On entry : B00/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMMON   BANK0
   240 ;;      Params:         0       0
   241 ;;      Locals:         0       0
   242 ;;      Temps:          0       3
   243 ;;      Totals:         0       3
   244 ;;Total ram usage:        3 bytes
   245 ;; Hardware stack levels required when called:    3
   246 ;; This function calls:
   247 ;;		_eeprom_read
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           
   254                           ;psect for function _main
   255  016A                     _main:	
   256                           
   257                           ;electronic_drawer_lock.c: 311: INTCON = 0x68;
   258                           
   259                           ;incstack = 0
   260                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   261  016A  3068               	movlw	104
   262  016B  008B               	movwf	11	;volatile
   263                           
   264                           ;electronic_drawer_lock.c: 321: OPTION_REG = 0x87;
   265  016C  3087               	movlw	135
   266  016D  1683               	bsf	3,5	;RP0=1, select bank1
   267  016E  0081               	movwf	1	;volatile
   268                           
   269                           ;electronic_drawer_lock.c: 324: PORTA = 0x00;
   270  016F  1283               	bcf	3,5	;RP0=0, select bank0
   271  0170  0185               	clrf	5	;volatile
   272                           
   273                           ;electronic_drawer_lock.c: 325: TRISA = 0x00;
   274  0171  1683               	bsf	3,5	;RP0=1, select bank1
   275  0172  0185               	clrf	5	;volatile
   276                           
   277                           ;electronic_drawer_lock.c: 328: PORTB = 0x00;
   278  0173  1283               	bcf	3,5	;RP0=0, select bank0
   279  0174  0186               	clrf	6	;volatile
   280                           
   281                           ;electronic_drawer_lock.c: 329: TRISB = 0xF0;
   282  0175  30F0               	movlw	240
   283  0176  1683               	bsf	3,5	;RP0=1, select bank1
   284  0177  0086               	movwf	6	;volatile
   285                           
   286                           ;electronic_drawer_lock.c: 332: changing = 0b0;
   287  0178  1283               	bcf	3,5	;RP0=0, select bank0
   288  0179  10AB               	bcf	_changing/(0+8),_changing& (0+7)	;volatile
   289                           
   290                           ;electronic_drawer_lock.c: 333: wrong = 0b0;
   291  017A  122B               	bcf	_wrong/(0+8),_wrong& (0+7)	;volatile
   292                           
   293                           ;electronic_drawer_lock.c: 334: open = 0b0;
   294  017B  112B               	bcf	_open/(0+8),_open& (0+7)	;volatile
   295                           
   296                           ;electronic_drawer_lock.c: 335: sleeping = 0b0;
   297  017C  11AB               	bcf	_sleeping/(0+8),_sleeping& (0+7)	;volatile
   298                           
   299                           ;electronic_drawer_lock.c: 336: but_pres = 0b0;
   300  017D  102B               	bcf	_but_pres/(0+8),_but_pres& (0+7)	;volatile
   301                           
   302                           ;electronic_drawer_lock.c: 337: digit_count = eeprom_read(0);
   303  017E  3000               	movlw	0
   304  017F  21E2               	fcall	_eeprom_read
   305  0180  1283               	bcf	3,5	;RP0=0, select bank0
   306  0181  0098               	movwf	??_main
   307  0182  0818               	movf	??_main,w
   308  0183  00AC               	movwf	_digit_count	;volatile
   309                           
   310                           ;electronic_drawer_lock.c: 338: digits_entered = 0;
   311  0184  019E               	clrf	_digits_entered	;volatile
   312                           
   313                           ;electronic_drawer_lock.c: 339: last_pres_time_l = 0;
   314  0185  01A0               	clrf	_last_pres_time_l	;volatile
   315                           
   316                           ;electronic_drawer_lock.c: 340: last_pres_time_h = 0;
   317  0186  019F               	clrf	_last_pres_time_h	;volatile
   318                           
   319                           ;electronic_drawer_lock.c: 341: w_led_time = 0;
   320  0187  01A2               	clrf	_w_led_time	;volatile
   321                           
   322                           ;electronic_drawer_lock.c: 342: ch_pres_cnt = 0;
   323  0188  019C               	clrf	_ch_pres_cnt	;volatile
   324                           
   325                           ;electronic_drawer_lock.c: 343: RA0 = !0b1;
   326  0189  1005               	bcf	5,0	;volatile
   327                           
   328                           ;electronic_drawer_lock.c: 344: RA2 = 0b1;
   329  018A  1505               	bsf	5,2	;volatile
   330                           
   331                           ;electronic_drawer_lock.c: 345: RA3 = 0b1;
   332  018B  1585               	bsf	5,3	;volatile
   333                           
   334                           ;electronic_drawer_lock.c: 346: RA4 = 0b0;
   335  018C  1205               	bcf	5,4	;volatile
   336                           
   337                           ;electronic_drawer_lock.c: 347: _delay((unsigned long)((1000)*(4000000/4000.0)));
   338  018D  3006               	movlw	6
   339  018E  009A               	movwf	??_main+2
   340  018F  3013               	movlw	19
   341  0190  0099               	movwf	??_main+1
   342  0191  30B1               	movlw	177
   343  0192  0098               	movwf	??_main
   344  0193                     u1057:	
   345  0193  0B98               	decfsz	??_main,f
   346  0194  2993               	goto	u1057
   347  0195  0B99               	decfsz	??_main+1,f
   348  0196  2993               	goto	u1057
   349  0197  0B9A               	decfsz	??_main+2,f
   350  0198  2993               	goto	u1057
   351  0199  299A               	nop2
   352                           
   353                           ;electronic_drawer_lock.c: 348: RA2 = !0b1;
   354  019A  1283               	bcf	3,5	;RP0=0, select bank0
   355  019B  1105               	bcf	5,2	;volatile
   356                           
   357                           ;electronic_drawer_lock.c: 349: RA3 = !0b1;
   358  019C  1185               	bcf	5,3	;volatile
   359                           
   360                           ;electronic_drawer_lock.c: 350: RA4 = !0b0;
   361  019D  1605               	bsf	5,4	;volatile
   362                           
   363                           ;electronic_drawer_lock.c: 351: RA1 = !0b1;
   364  019E  1085               	bcf	5,1	;volatile
   365                           
   366                           ;electronic_drawer_lock.c: 352: (GIE = 1);
   367  019F  178B               	bsf	11,7	;volatile
   368  01A0                     l1216:	
   369                           ;electronic_drawer_lock.c: 353: while(1)
   370                           
   371                           
   372                           ;electronic_drawer_lock.c: 354: {
   373                           ;electronic_drawer_lock.c: 355: RB1 = !0b1;
   374  01A0  1086               	bcf	6,1	;volatile
   375                           
   376                           ;electronic_drawer_lock.c: 356: RB2 = !0b1;
   377  01A1  1106               	bcf	6,2	;volatile
   378                           
   379                           ;electronic_drawer_lock.c: 357: RB3 = !0b1;
   380  01A2  1186               	bcf	6,3	;volatile
   381                           
   382                           ;electronic_drawer_lock.c: 358: RB0 = 0b1;
   383  01A3  1406               	bsf	6,0	;volatile
   384                           
   385                           ;electronic_drawer_lock.c: 359: __nop();
   386  01A4  0000               	nop
   387  01A5                     l151:	
   388                           ;electronic_drawer_lock.c: 360: while(but_pres);
   389                           
   390  01A5  1283               	bcf	3,5	;RP0=0, select bank0
   391  01A6  182B               	btfsc	_but_pres/(0+8),_but_pres& (0+7)	;volatile
   392  01A7  29A5               	goto	l151
   393                           
   394                           ;electronic_drawer_lock.c: 362: RB0 = !0b1;
   395  01A8  1006               	bcf	6,0	;volatile
   396                           
   397                           ;electronic_drawer_lock.c: 363: RB2 = !0b1;
   398  01A9  1106               	bcf	6,2	;volatile
   399                           
   400                           ;electronic_drawer_lock.c: 364: RB3 = !0b1;
   401  01AA  1186               	bcf	6,3	;volatile
   402                           
   403                           ;electronic_drawer_lock.c: 365: RB1 = 0b1;
   404  01AB  1486               	bsf	6,1	;volatile
   405                           
   406                           ;electronic_drawer_lock.c: 366: __nop();
   407  01AC  0000               	nop
   408  01AD                     l154:	
   409                           ;electronic_drawer_lock.c: 367: while(but_pres);
   410                           
   411  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   412  01AE  182B               	btfsc	_but_pres/(0+8),_but_pres& (0+7)	;volatile
   413  01AF  29AD               	goto	l154
   414                           
   415                           ;electronic_drawer_lock.c: 369: RB0 = !0b1;
   416  01B0  1006               	bcf	6,0	;volatile
   417                           
   418                           ;electronic_drawer_lock.c: 370: RB1 = !0b1;
   419  01B1  1086               	bcf	6,1	;volatile
   420                           
   421                           ;electronic_drawer_lock.c: 371: RB3 = !0b1;
   422  01B2  1186               	bcf	6,3	;volatile
   423                           
   424                           ;electronic_drawer_lock.c: 372: RB2 = 0b1;
   425  01B3  1506               	bsf	6,2	;volatile
   426                           
   427                           ;electronic_drawer_lock.c: 373: __nop();
   428  01B4  0000               	nop
   429  01B5                     l157:	
   430                           ;electronic_drawer_lock.c: 374: while(but_pres);
   431                           
   432  01B5  1283               	bcf	3,5	;RP0=0, select bank0
   433  01B6  182B               	btfsc	_but_pres/(0+8),_but_pres& (0+7)	;volatile
   434  01B7  29B5               	goto	l157
   435                           
   436                           ;electronic_drawer_lock.c: 376: RB0 = !0b1;
   437  01B8  1006               	bcf	6,0	;volatile
   438                           
   439                           ;electronic_drawer_lock.c: 377: RB1 = !0b1;
   440  01B9  1086               	bcf	6,1	;volatile
   441                           
   442                           ;electronic_drawer_lock.c: 378: RB2 = !0b1;
   443  01BA  1106               	bcf	6,2	;volatile
   444                           
   445                           ;electronic_drawer_lock.c: 379: RB3 = 0b1;
   446  01BB  1586               	bsf	6,3	;volatile
   447                           
   448                           ;electronic_drawer_lock.c: 380: __nop();
   449  01BC  0000               	nop
   450  01BD                     l160:	
   451                           ;electronic_drawer_lock.c: 381: while(but_pres);
   452                           
   453  01BD  1283               	bcf	3,5	;RP0=0, select bank0
   454  01BE  1C2B               	btfss	_but_pres/(0+8),_but_pres& (0+7)	;volatile
   455  01BF  29A0               	goto	l1216
   456  01C0  29BD               	goto	l160
   457  01C1                     __end_of_main:	
   458                           
   459                           	psect	text1
   460  01E2                     __ptext1:	
   461 ;; *************** function _eeprom_read *****************
   462 ;; Defined at:
   463 ;;		line 6 in file "/opt/microchip/xc8/v1.36/sources/pic/eeread.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;  addr            1    wreg     unsigned char 
   466 ;; Auto vars:     Size  Location     Type
   467 ;;  addr            1   11[BANK0 ] unsigned char 
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      unsigned char 
   470 ;; Registers used:
   471 ;;		wreg, status,2, status,0
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMMON   BANK0
   477 ;;      Params:         0       0
   478 ;;      Locals:         0       1
   479 ;;      Temps:          0       1
   480 ;;      Totals:         0       2
   481 ;;Total ram usage:        2 bytes
   482 ;; Hardware stack levels used:    1
   483 ;; Hardware stack levels required when called:    2
   484 ;; This function calls:
   485 ;;		Nothing
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           
   492                           ;psect for function _eeprom_read
   493  01E2                     _eeprom_read:	
   494                           
   495                           ;incstack = 0
   496                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
   497                           ;eeprom_read@addr stored from wreg
   498  01E2  1283               	bcf	3,5	;RP0=0, select bank0
   499  01E3  0097               	movwf	eeprom_read@addr
   500  01E4                     l178:	
   501  01E4  0064               	clrwdt	;# 
   502  01E5  1683               	bsf	3,5	;RP0=1, select bank1
   503  01E6  1888               	btfsc	8,1	;volsfr
   504  01E7  29E4               	goto	l178
   505  01E8  1283               	bcf	3,5	;RP0=0, select bank0
   506  01E9  0817               	movf	eeprom_read@addr,w
   507  01EA  0089               	movwf	9	;volatile
   508  01EB  303F               	movlw	63
   509  01EC  0096               	movwf	??_eeprom_read
   510  01ED  0816               	movf	??_eeprom_read,w
   511  01EE  1683               	bsf	3,5	;RP0=1, select bank1
   512  01EF  0588               	andwf	8,f	;volsfr
   513  01F0  1408               	bsf	8,0	;volsfr
   514  01F1  1003               	clrc
   515  01F2  1808               	btfsc	8,0	;volsfr
   516  01F3  1403               	setc
   517  01F4  3000               	movlw	0
   518  01F5  1803               	skipnc
   519  01F6  3001               	movlw	1
   520  01F7  1283               	bcf	3,5	;RP0=0, select bank0
   521  01F8  0808               	movf	8,w	;volatile
   522  01F9  0008               	return
   523  01FA                     __end_of_eeprom_read:	
   524                           
   525                           	psect	text2
   526  002B                     __ptext2:	
   527 ;; *************** function _isr *****************
   528 ;; Defined at:
   529 ;;		line 39 in file "electronic_drawer_lock.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;		None
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0
   543 ;;      Params:         0       0
   544 ;;      Locals:         0       0
   545 ;;      Temps:          0       7
   546 ;;      Totals:         0       7
   547 ;;Total ram usage:        7 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; Hardware stack levels required when called:    1
   550 ;; This function calls:
   551 ;;		_eeprom_write
   552 ;;		i1_eeprom_read
   553 ;; This function is called by:
   554 ;;		Interrupt level 1
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           
   559                           ;psect for function _isr
   560  002B                     _isr:	
   561                           
   562                           ;electronic_drawer_lock.c: 41: if(T0IF)
   563  002B  1D0B               	btfss	11,2	;volatile
   564  002C  2867               	goto	i1l1022
   565                           
   566                           ;electronic_drawer_lock.c: 42: {
   567                           ;electronic_drawer_lock.c: 43: T0IF = 0b0;
   568  002D  110B               	bcf	11,2	;volatile
   569                           
   570                           ;electronic_drawer_lock.c: 44: if(RA3 == 0b1)
   571  002E  1D85               	btfss	5,3	;volatile
   572  002F  283B               	goto	i1l986
   573                           
   574                           ;electronic_drawer_lock.c: 45: {
   575                           ;electronic_drawer_lock.c: 46: w_led_time++;
   576  0030  3001               	movlw	1
   577  0031  008F               	movwf	??_isr
   578  0032  080F               	movf	??_isr,w
   579  0033  07A2               	addwf	_w_led_time,f	;volatile
   580                           
   581                           ;electronic_drawer_lock.c: 47: if(w_led_time >= 31)
   582  0034  301F               	movlw	31
   583  0035  0222               	subwf	_w_led_time,w	;volatile
   584  0036  1C03               	skipc
   585  0037  283B               	goto	i1l986
   586                           
   587                           ;electronic_drawer_lock.c: 48: {
   588                           ;electronic_drawer_lock.c: 49: RA3 = !0b1;
   589  0038  1185               	bcf	5,3	;volatile
   590                           
   591                           ;electronic_drawer_lock.c: 50: RA1 = !0b1;
   592  0039  1085               	bcf	5,1	;volatile
   593                           
   594                           ;electronic_drawer_lock.c: 51: w_led_time = 0;
   595  003A  01A2               	clrf	_w_led_time	;volatile
   596  003B                     i1l986:	
   597                           
   598                           ;electronic_drawer_lock.c: 52: }
   599                           ;electronic_drawer_lock.c: 53: }
   600                           ;electronic_drawer_lock.c: 54: if(RA1 == 0b1)
   601  003B  1C85               	btfss	5,1	;volatile
   602  003C  2849               	goto	i1l88
   603                           
   604                           ;electronic_drawer_lock.c: 55: {
   605                           ;electronic_drawer_lock.c: 56: if(!changing)
   606  003D  18AB               	btfsc	_changing/(0+8),_changing& (0+7)	;volatile
   607  003E  2843               	goto	i1l992
   608                           
   609                           ;electronic_drawer_lock.c: 57: buz_time++;
   610  003F  3001               	movlw	1
   611  0040  008F               	movwf	??_isr
   612  0041  080F               	movf	??_isr,w
   613  0042  079B               	addwf	_buz_time,f	;volatile
   614  0043                     i1l992:	
   615                           
   616                           ;electronic_drawer_lock.c: 58: if(buz_time >= 46)
   617  0043  302E               	movlw	46
   618  0044  021B               	subwf	_buz_time,w	;volatile
   619  0045  1C03               	skipc
   620  0046  2849               	goto	i1l88
   621                           
   622                           ;electronic_drawer_lock.c: 59: {
   623                           ;electronic_drawer_lock.c: 60: RA1 = !0b1;
   624  0047  1085               	bcf	5,1	;volatile
   625                           
   626                           ;electronic_drawer_lock.c: 61: RA0 = !0b1;
   627  0048  1005               	bcf	5,0	;volatile
   628  0049                     i1l88:	
   629                           
   630                           ;electronic_drawer_lock.c: 62: }
   631                           ;electronic_drawer_lock.c: 63: }
   632                           ;electronic_drawer_lock.c: 64: if(!but_pres)
   633  0049  182B               	btfsc	_but_pres/(0+8),_but_pres& (0+7)	;volatile
   634  004A  284F               	goto	i1l91
   635                           
   636                           ;electronic_drawer_lock.c: 65: last_pres_time_l++;
   637  004B  3001               	movlw	1
   638  004C  008F               	movwf	??_isr
   639  004D  080F               	movf	??_isr,w
   640  004E  07A0               	addwf	_last_pres_time_l,f	;volatile
   641  004F                     i1l91:	
   642                           
   643                           ;electronic_drawer_lock.c: 66: if(last_pres_time_l >= 255)
   644  004F  0A20               	incf	_last_pres_time_l,w	;volatile
   645  0050  1D03               	btfss	3,2
   646  0051  2856               	goto	i1l1000
   647                           
   648                           ;electronic_drawer_lock.c: 67: last_pres_time_h++;
   649  0052  3001               	movlw	1
   650  0053  008F               	movwf	??_isr
   651  0054  080F               	movf	??_isr,w
   652  0055  079F               	addwf	_last_pres_time_h,f	;volatile
   653  0056                     i1l1000:	
   654                           
   655                           ;electronic_drawer_lock.c: 68: if(last_pres_time_h >= 4)
   656  0056  3004               	movlw	4
   657  0057  021F               	subwf	_last_pres_time_h,w	;volatile
   658  0058  1C03               	skipc
   659  0059  2867               	goto	i1l1022
   660                           
   661                           ;electronic_drawer_lock.c: 69: {
   662                           ;electronic_drawer_lock.c: 71: last_pres_time_h = 0;
   663  005A  019F               	clrf	_last_pres_time_h	;volatile
   664                           
   665                           ;electronic_drawer_lock.c: 72: digits_entered = 0;
   666  005B  019E               	clrf	_digits_entered	;volatile
   667                           
   668                           ;electronic_drawer_lock.c: 73: wrong = 0b0;
   669  005C  122B               	bcf	_wrong/(0+8),_wrong& (0+7)	;volatile
   670                           
   671                           ;electronic_drawer_lock.c: 74: ch_pres_cnt = 0;
   672  005D  019C               	clrf	_ch_pres_cnt	;volatile
   673                           
   674                           ;electronic_drawer_lock.c: 75: RA2 = !0b1;
   675  005E  1105               	bcf	5,2	;volatile
   676                           
   677                           ;electronic_drawer_lock.c: 76: RA3 = !0b1;
   678  005F  1185               	bcf	5,3	;volatile
   679                           
   680                           ;electronic_drawer_lock.c: 77: RA1 = !0b1;
   681  0060  1085               	bcf	5,1	;volatile
   682                           
   683                           ;electronic_drawer_lock.c: 78: RB0 = !0b1;
   684  0061  1006               	bcf	6,0	;volatile
   685                           
   686                           ;electronic_drawer_lock.c: 79: RB1 = !0b1;
   687  0062  1086               	bcf	6,1	;volatile
   688                           
   689                           ;electronic_drawer_lock.c: 80: RB2 = !0b1;
   690  0063  1106               	bcf	6,2	;volatile
   691                           
   692                           ;electronic_drawer_lock.c: 81: RB3 = 0b1;
   693  0064  1586               	bsf	6,3	;volatile
   694                           
   695                           ;electronic_drawer_lock.c: 82: sleeping = 0b1;
   696  0065  15AB               	bsf	_sleeping/(0+8),_sleeping& (0+7)	;volatile
   697  0066  0063               	sleep	;# 
   698  0067                     i1l1022:	
   699                           
   700                           ;electronic_drawer_lock.c: 84: }
   701                           ;electronic_drawer_lock.c: 85: }
   702                           ;electronic_drawer_lock.c: 86: if(RBIF)
   703  0067  1C0B               	btfss	11,0	;volatile
   704  0068  2959               	goto	i1l1160
   705                           
   706                           ;electronic_drawer_lock.c: 87: {
   707                           ;electronic_drawer_lock.c: 88: _delay((unsigned long)((150)*(4000000/4000.0)));
   708  0069  30C3               	movlw	195
   709  006A  1283               	bcf	3,5	;RP0=0, select bank0
   710  006B  0090               	movwf	??_isr+1
   711  006C  30CD               	movlw	205
   712  006D  008F               	movwf	??_isr
   713  006E                     u106_27:	
   714  006E  0B8F               	decfsz	??_isr,f
   715  006F  286E               	goto	u106_27
   716  0070  0B90               	decfsz	??_isr+1,f
   717  0071  286E               	goto	u106_27
   718                           
   719                           ;electronic_drawer_lock.c: 89: digit = 10;
   720  0072  300A               	movlw	10
   721  0073  1283               	bcf	3,5	;RP0=0, select bank0
   722  0074  008F               	movwf	??_isr
   723  0075  080F               	movf	??_isr,w
   724  0076  009D               	movwf	_digit	;volatile
   725                           
   726                           ;electronic_drawer_lock.c: 90: last_pres_time_l = 0;
   727  0077  01A0               	clrf	_last_pres_time_l	;volatile
   728                           
   729                           ;electronic_drawer_lock.c: 91: last_pres_time_h = 0;
   730  0078  019F               	clrf	_last_pres_time_h	;volatile
   731                           
   732                           ;electronic_drawer_lock.c: 92: if(sleeping)
   733  0079  1DAB               	btfss	_sleeping/(0+8),_sleeping& (0+7)	;volatile
   734  007A  287D               	goto	i1l95
   735                           
   736                           ;electronic_drawer_lock.c: 93: {
   737                           ;electronic_drawer_lock.c: 94: sleeping = 0b0;
   738  007B  11AB               	bcf	_sleeping/(0+8),_sleeping& (0+7)	;volatile
   739                           
   740                           ;electronic_drawer_lock.c: 95: return;
   741  007C  295E               	goto	i1l96
   742  007D                     i1l95:	
   743                           
   744                           ;electronic_drawer_lock.c: 96: }
   745                           ;electronic_drawer_lock.c: 97: if(RB4 == 0b1)
   746  007D  1E06               	btfss	6,4	;volatile
   747  007E  28B7               	goto	i1l97
   748                           
   749                           ;electronic_drawer_lock.c: 98: {
   750                           ;electronic_drawer_lock.c: 99: but_pres = 0b1;
   751  007F  142B               	bsf	_but_pres/(0+8),_but_pres& (0+7)	;volatile
   752                           
   753                           ;electronic_drawer_lock.c: 100: if(RB0 == 0b1)
   754  0080  1C06               	btfss	6,0	;volatile
   755  0081  2884               	goto	i1l98
   756                           
   757                           ;electronic_drawer_lock.c: 101: {
   758                           ;electronic_drawer_lock.c: 102: digit = 1;
   759  0082  3001               	movlw	1
   760  0083  28D8               	goto	L8
   761  0084                     i1l98:	
   762                           ;electronic_drawer_lock.c: 103: }
   763                           
   764                           
   765                           ;electronic_drawer_lock.c: 104: else if(RB1 == 0b1)
   766  0084  1C86               	btfss	6,1	;volatile
   767  0085  2888               	goto	i1l100
   768                           
   769                           ;electronic_drawer_lock.c: 105: {
   770                           ;electronic_drawer_lock.c: 106: digit = 4;
   771  0086  3004               	movlw	4
   772  0087  28D8               	goto	L8
   773  0088                     i1l100:	
   774                           ;electronic_drawer_lock.c: 107: }
   775                           
   776                           
   777                           ;electronic_drawer_lock.c: 108: else if(RB2 == 0b1)
   778  0088  1D06               	btfss	6,2	;volatile
   779  0089  288C               	goto	i1l102
   780                           
   781                           ;electronic_drawer_lock.c: 109: {
   782                           ;electronic_drawer_lock.c: 110: digit = 7;
   783  008A  3007               	movlw	7
   784  008B  28D8               	goto	L8
   785  008C                     i1l102:	
   786                           ;electronic_drawer_lock.c: 111: }
   787                           
   788                           
   789                           ;electronic_drawer_lock.c: 112: else if(RB3 == 0b1)
   790  008C  1D86               	btfss	6,3	;volatile
   791  008D  2900               	goto	i1l1124
   792                           
   793                           ;electronic_drawer_lock.c: 113: {
   794                           ;electronic_drawer_lock.c: 115: digits_entered = 0;
   795  008E  019E               	clrf	_digits_entered	;volatile
   796                           
   797                           ;electronic_drawer_lock.c: 116: wrong = 0b0;
   798  008F  122B               	bcf	_wrong/(0+8),_wrong& (0+7)	;volatile
   799                           
   800                           ;electronic_drawer_lock.c: 120: if(open)
   801  0090  1D2B               	btfss	_open/(0+8),_open& (0+7)	;volatile
   802  0091  28FE               	goto	L9
   803                           
   804                           ;electronic_drawer_lock.c: 121: {
   805                           ;electronic_drawer_lock.c: 125: if(changing)
   806  0092  1CAB               	btfss	_changing/(0+8),_changing& (0+7)	;volatile
   807  0093  2897               	goto	i1l1052
   808                           
   809                           ;electronic_drawer_lock.c: 126: {
   810                           ;electronic_drawer_lock.c: 127: changing = 0b0;
   811  0094  10AB               	bcf	_changing/(0+8),_changing& (0+7)	;volatile
   812                           
   813                           ;electronic_drawer_lock.c: 128: RA4 = !0b0;
   814  0095  1605               	bsf	5,4	;volatile
   815                           
   816                           ;electronic_drawer_lock.c: 129: }
   817  0096  28A7               	goto	i1l1064
   818  0097                     i1l1052:	
   819                           
   820                           ;electronic_drawer_lock.c: 135: else
   821                           ;electronic_drawer_lock.c: 136: {
   822                           ;electronic_drawer_lock.c: 137: ch_pres_cnt++;
   823  0097  3001               	movlw	1
   824  0098  008F               	movwf	??_isr
   825  0099  080F               	movf	??_isr,w
   826  009A  079C               	addwf	_ch_pres_cnt,f	;volatile
   827                           
   828                           ;electronic_drawer_lock.c: 138: if(ch_pres_cnt >= 3)
   829  009B  3003               	movlw	3
   830  009C  021C               	subwf	_ch_pres_cnt,w	;volatile
   831  009D  1C03               	skipc
   832  009E  28A7               	goto	i1l1064
   833                           
   834                           ;electronic_drawer_lock.c: 139: {
   835                           ;electronic_drawer_lock.c: 140: ch_pres_cnt = 0;
   836  009F  019C               	clrf	_ch_pres_cnt	;volatile
   837                           
   838                           ;electronic_drawer_lock.c: 142: changing = 0b1;
   839  00A0  14AB               	bsf	_changing/(0+8),_changing& (0+7)	;volatile
   840                           
   841                           ;electronic_drawer_lock.c: 143: digit_count = 0;
   842  00A1  01AC               	clrf	_digit_count	;volatile
   843                           
   844                           ;electronic_drawer_lock.c: 145: eeprom_write(0, 0);
   845  00A2  018C               	clrf	eeprom_write@value
   846  00A3  3000               	movlw	0
   847  00A4  21C1               	fcall	_eeprom_write
   848                           
   849                           ;electronic_drawer_lock.c: 146: RA4 = 0b0;
   850  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   851  00A6  1205               	bcf	5,4	;volatile
   852  00A7                     i1l1064:	
   853                           
   854                           ;electronic_drawer_lock.c: 147: }
   855                           ;electronic_drawer_lock.c: 148: }
   856                           ;electronic_drawer_lock.c: 149: RA1 = 0b1;
   857  00A7  1485               	bsf	5,1	;volatile
   858                           
   859                           ;electronic_drawer_lock.c: 150: _delay((unsigned long)((300)*(4000000/4000.0)));
   860  00A8  3002               	movlw	2
   861  00A9  0091               	movwf	??_isr+2
   862  00AA  3086               	movlw	134
   863  00AB  0090               	movwf	??_isr+1
   864  00AC  3099               	movlw	153
   865  00AD  008F               	movwf	??_isr
   866  00AE                     u107_27:	
   867  00AE  0B8F               	decfsz	??_isr,f
   868  00AF  28AE               	goto	u107_27
   869  00B0  0B90               	decfsz	??_isr+1,f
   870  00B1  28AE               	goto	u107_27
   871  00B2  0B91               	decfsz	??_isr+2,f
   872  00B3  28AE               	goto	u107_27
   873                           
   874                           ;electronic_drawer_lock.c: 151: RA1 = !0b1;
   875  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   876  00B5  1085               	bcf	5,1	;volatile
   877  00B6  28FE               	goto	L9
   878  00B7                     i1l97:	
   879                           ;electronic_drawer_lock.c: 155: }
   880                           ;electronic_drawer_lock.c: 156: }
   881                           
   882                           ;electronic_drawer_lock.c: 154: return;
   883                           
   884                           ;electronic_drawer_lock.c: 152: }
   885                           ;electronic_drawer_lock.c: 153: RBIF = 0b0;
   886                           
   887                           
   888                           ;electronic_drawer_lock.c: 157: else if(RB5 == 0b1)
   889  00B7  1E86               	btfss	6,5	;volatile
   890  00B8  28CA               	goto	i1l110
   891                           
   892                           ;electronic_drawer_lock.c: 158: {
   893                           ;electronic_drawer_lock.c: 159: but_pres = 0b1;
   894  00B9  142B               	bsf	_but_pres/(0+8),_but_pres& (0+7)	;volatile
   895                           
   896                           ;electronic_drawer_lock.c: 160: if(RB0 == 0b1)
   897  00BA  1C06               	btfss	6,0	;volatile
   898  00BB  28BE               	goto	i1l111
   899                           
   900                           ;electronic_drawer_lock.c: 161: {
   901                           ;electronic_drawer_lock.c: 162: digit = 2;
   902  00BC  3002               	movlw	2
   903  00BD  28D8               	goto	L8
   904  00BE                     i1l111:	
   905                           ;electronic_drawer_lock.c: 163: }
   906                           
   907                           
   908                           ;electronic_drawer_lock.c: 164: else if(RB1 == 0b1)
   909  00BE  1C86               	btfss	6,1	;volatile
   910  00BF  28C2               	goto	i1l113
   911                           
   912                           ;electronic_drawer_lock.c: 165: {
   913                           ;electronic_drawer_lock.c: 166: digit = 5;
   914  00C0  3005               	movlw	5
   915  00C1  28D8               	goto	L8
   916  00C2                     i1l113:	
   917                           ;electronic_drawer_lock.c: 167: }
   918                           
   919                           
   920                           ;electronic_drawer_lock.c: 168: else if(RB2 == 0b1)
   921  00C2  1D06               	btfss	6,2	;volatile
   922  00C3  28C6               	goto	i1l115
   923                           
   924                           ;electronic_drawer_lock.c: 169: {
   925                           ;electronic_drawer_lock.c: 170: digit = 8;
   926  00C4  3008               	movlw	8
   927  00C5  28D8               	goto	L8
   928  00C6                     i1l115:	
   929                           ;electronic_drawer_lock.c: 171: }
   930                           
   931                           
   932                           ;electronic_drawer_lock.c: 172: else if(RB3 == 0b1)
   933  00C6  1D86               	btfss	6,3	;volatile
   934  00C7  2900               	goto	i1l1124
   935                           
   936                           ;electronic_drawer_lock.c: 173: {
   937                           ;electronic_drawer_lock.c: 174: digit = 0;
   938  00C8  019D               	clrf	_digit	;volatile
   939                           
   940                           ;electronic_drawer_lock.c: 175: }
   941                           ;electronic_drawer_lock.c: 176: }
   942  00C9  2900               	goto	i1l1124
   943  00CA                     i1l110:	
   944                           
   945                           ;electronic_drawer_lock.c: 177: else if(RB6 == 0b1)
   946  00CA  1F06               	btfss	6,6	;volatile
   947  00CB  28FD               	goto	i1l119
   948                           
   949                           ;electronic_drawer_lock.c: 178: {
   950                           ;electronic_drawer_lock.c: 179: but_pres = 0b1;
   951  00CC  142B               	bsf	_but_pres/(0+8),_but_pres& (0+7)	;volatile
   952                           
   953                           ;electronic_drawer_lock.c: 180: if(RB0 == 0b1)
   954  00CD  1C06               	btfss	6,0	;volatile
   955  00CE  28D1               	goto	i1l120
   956                           
   957                           ;electronic_drawer_lock.c: 181: {
   958                           ;electronic_drawer_lock.c: 182: digit = 3;
   959  00CF  3003               	movlw	3
   960  00D0  28D8               	goto	L8
   961  00D1                     i1l120:	
   962                           ;electronic_drawer_lock.c: 183: }
   963                           
   964                           
   965                           ;electronic_drawer_lock.c: 184: else if(RB1 == 0b1)
   966  00D1  1C86               	btfss	6,1	;volatile
   967  00D2  28D5               	goto	i1l122
   968                           
   969                           ;electronic_drawer_lock.c: 185: {
   970                           ;electronic_drawer_lock.c: 186: digit = 6;
   971  00D3  3006               	movlw	6
   972  00D4  28D8               	goto	L8
   973  00D5                     i1l122:	
   974                           ;electronic_drawer_lock.c: 187: }
   975                           
   976                           
   977                           ;electronic_drawer_lock.c: 188: else if(RB2 == 0b1)
   978  00D5  1D06               	btfss	6,2	;volatile
   979  00D6  28DC               	goto	i1l124
   980                           
   981                           ;electronic_drawer_lock.c: 189: {
   982                           ;electronic_drawer_lock.c: 190: digit = 9;
   983  00D7  3009               	movlw	9
   984  00D8                     L8:	
   985  00D8  008F               	movwf	??_isr
   986  00D9  080F               	movf	??_isr,w
   987  00DA  009D               	movwf	_digit	;volatile
   988                           
   989                           ;electronic_drawer_lock.c: 191: }
   990  00DB  2900               	goto	i1l1124
   991  00DC                     i1l124:	
   992                           
   993                           ;electronic_drawer_lock.c: 192: else if(RB3 == 0b1)
   994  00DC  1D86               	btfss	6,3	;volatile
   995  00DD  2900               	goto	i1l1124
   996                           
   997                           ;electronic_drawer_lock.c: 193: {
   998                           ;electronic_drawer_lock.c: 198: if(!changing)
   999  00DE  18AB               	btfsc	_changing/(0+8),_changing& (0+7)	;volatile
  1000  00DF  28FE               	goto	L9
  1001                           
  1002                           ;electronic_drawer_lock.c: 199: {
  1003                           ;electronic_drawer_lock.c: 201: if(open)
  1004  00E0  1D2B               	btfss	_open/(0+8),_open& (0+7)	;volatile
  1005  00E1  28E6               	goto	i1l128
  1006                           
  1007                           ;electronic_drawer_lock.c: 202: {
  1008                           ;electronic_drawer_lock.c: 203: RA0 = !0b1;
  1009  00E2  1005               	bcf	5,0	;volatile
  1010                           
  1011                           ;electronic_drawer_lock.c: 204: open = 0b0;
  1012  00E3  112B               	bcf	_open/(0+8),_open& (0+7)	;volatile
  1013                           
  1014                           ;electronic_drawer_lock.c: 205: RA2 = !0b1;
  1015  00E4  1105               	bcf	5,2	;volatile
  1016                           
  1017                           ;electronic_drawer_lock.c: 206: }
  1018  00E5  28F9               	goto	i1l1118
  1019  00E6                     i1l128:	
  1020                           
  1021                           ;electronic_drawer_lock.c: 207: else if(wrong)
  1022  00E6  1A2B               	btfsc	_wrong/(0+8),_wrong& (0+7)	;volatile
  1023  00E7  28F6               	goto	i1l1112
  1024                           
  1025                           ;electronic_drawer_lock.c: 216: else if(digits_entered == digit_count || digits_entered 
      +                          == 8)
  1026                           
  1027                           ;electronic_drawer_lock.c: 212: }
  1028                           
  1029                           ;electronic_drawer_lock.c: 211: RA1 = 0b1;
  1030                           
  1031                           ;electronic_drawer_lock.c: 210: RA3 = 0b1;
  1032                           
  1033                           ;electronic_drawer_lock.c: 208: {
  1034                           ;electronic_drawer_lock.c: 209: w_led_time = 0;
  1035  00E8  081E               	movf	_digits_entered,w	;volatile
  1036  00E9  062C               	xorwf	_digit_count,w	;volatile
  1037  00EA  1903               	skipnz
  1038  00EB  28F0               	goto	i1l134
  1039  00EC  3008               	movlw	8
  1040  00ED  061E               	xorwf	_digits_entered,w	;volatile
  1041  00EE  1D03               	btfss	3,2
  1042  00EF  28F6               	goto	i1l1112
  1043  00F0                     i1l134:	
  1044                           
  1045                           ;electronic_drawer_lock.c: 217: {
  1046                           ;electronic_drawer_lock.c: 218: RA3 = !0b1;
  1047  00F0  1185               	bcf	5,3	;volatile
  1048                           
  1049                           ;electronic_drawer_lock.c: 219: RA0 = 0b1;
  1050  00F1  1405               	bsf	5,0	;volatile
  1051                           
  1052                           ;electronic_drawer_lock.c: 220: open = 0b1;
  1053  00F2  152B               	bsf	_open/(0+8),_open& (0+7)	;volatile
  1054                           
  1055                           ;electronic_drawer_lock.c: 221: RA2 = 0b1;
  1056  00F3  1505               	bsf	5,2	;volatile
  1057                           
  1058                           ;electronic_drawer_lock.c: 222: buz_time = 0;
  1059  00F4  019B               	clrf	_buz_time	;volatile
  1060  00F5  28F8               	goto	i1l1116
  1061  00F6                     i1l1112:	
  1062                           ;electronic_drawer_lock.c: 224: }
  1063                           
  1064                           ;electronic_drawer_lock.c: 223: RA1 = 0b1;
  1065                           
  1066                           
  1067                           ;electronic_drawer_lock.c: 225: else
  1068                           ;electronic_drawer_lock.c: 226: {
  1069                           ;electronic_drawer_lock.c: 227: w_led_time = 0;
  1070  00F6  01A2               	clrf	_w_led_time	;volatile
  1071                           
  1072                           ;electronic_drawer_lock.c: 228: RA3 = 0b1;
  1073  00F7  1585               	bsf	5,3	;volatile
  1074  00F8                     i1l1116:	
  1075                           
  1076                           ;electronic_drawer_lock.c: 229: RA1 = 0b1;
  1077  00F8  1485               	bsf	5,1	;volatile
  1078  00F9                     i1l1118:	
  1079                           
  1080                           ;electronic_drawer_lock.c: 230: }
  1081                           ;electronic_drawer_lock.c: 231: wrong = 0b0;
  1082  00F9  122B               	bcf	_wrong/(0+8),_wrong& (0+7)	;volatile
  1083                           
  1084                           ;electronic_drawer_lock.c: 232: digits_entered = 0;
  1085  00FA  019E               	clrf	_digits_entered	;volatile
  1086                           
  1087                           ;electronic_drawer_lock.c: 233: ch_pres_cnt = 0;
  1088  00FB  019C               	clrf	_ch_pres_cnt	;volatile
  1089  00FC  28FE               	goto	L9
  1090  00FD                     i1l119:	
  1091                           ;electronic_drawer_lock.c: 237: }
  1092                           ;electronic_drawer_lock.c: 238: }
  1093                           
  1094                           ;electronic_drawer_lock.c: 236: return;
  1095                           
  1096                           ;electronic_drawer_lock.c: 234: }
  1097                           ;electronic_drawer_lock.c: 235: RBIF = 0b0;
  1098                           
  1099                           
  1100                           ;electronic_drawer_lock.c: 239: else
  1101                           ;electronic_drawer_lock.c: 240: {
  1102                           ;electronic_drawer_lock.c: 241: but_pres = 0b0;
  1103  00FD  102B               	bcf	_but_pres/(0+8),_but_pres& (0+7)	;volatile
  1104  00FE                     L9:	
  1105                           
  1106                           ;electronic_drawer_lock.c: 242: RBIF = 0b0;
  1107  00FE  100B               	bcf	11,0	;volatile
  1108                           
  1109                           ;electronic_drawer_lock.c: 243: return;
  1110  00FF  295E               	goto	i1l96
  1111  0100                     i1l1124:	
  1112                           
  1113                           ;electronic_drawer_lock.c: 244: }
  1114                           ;electronic_drawer_lock.c: 245: if(digit < 10)
  1115  0100  300A               	movlw	10
  1116  0101  021D               	subwf	_digit,w	;volatile
  1117  0102  1803               	skipnc
  1118  0103  2958               	goto	i1l1158
  1119                           
  1120                           ;electronic_drawer_lock.c: 246: {
  1121                           ;electronic_drawer_lock.c: 251: if(changing)
  1122  0104  1CAB               	btfss	_changing/(0+8),_changing& (0+7)	;volatile
  1123  0105  292A               	goto	i1l138
  1124                           
  1125                           ;electronic_drawer_lock.c: 252: {
  1126                           ;electronic_drawer_lock.c: 254: if(digit_count < (64 - 2))
  1127  0106  303E               	movlw	62
  1128  0107  022C               	subwf	_digit_count,w	;volatile
  1129  0108  1803               	skipnc
  1130  0109  2958               	goto	i1l1158
  1131                           
  1132                           ;electronic_drawer_lock.c: 255: {
  1133                           ;electronic_drawer_lock.c: 256: digit_count++;
  1134  010A  3001               	movlw	1
  1135  010B  008F               	movwf	??_isr
  1136  010C  080F               	movf	??_isr,w
  1137  010D  07AC               	addwf	_digit_count,f	;volatile
  1138                           
  1139                           ;electronic_drawer_lock.c: 257: eeprom_write(digit_count, digit);
  1140  010E  081D               	movf	_digit,w	;volatile
  1141  010F  008F               	movwf	??_isr
  1142  0110  080F               	movf	??_isr,w
  1143  0111  008C               	movwf	eeprom_write@value
  1144  0112  082C               	movf	_digit_count,w	;volatile
  1145  0113  21C1               	fcall	_eeprom_write
  1146                           
  1147                           ;electronic_drawer_lock.c: 258: eeprom_write(0, digit_count);
  1148  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1149  0115  082C               	movf	_digit_count,w	;volatile
  1150  0116  008F               	movwf	??_isr
  1151  0117  080F               	movf	??_isr,w
  1152  0118  008C               	movwf	eeprom_write@value
  1153  0119  3000               	movlw	0
  1154  011A  21C1               	fcall	_eeprom_write
  1155                           
  1156                           ;electronic_drawer_lock.c: 259: RA1 = 0b1;
  1157  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1158  011C  1485               	bsf	5,1	;volatile
  1159                           
  1160                           ;electronic_drawer_lock.c: 260: _delay((unsigned long)((300)*(4000000/4000.0)));
  1161  011D  3002               	movlw	2
  1162  011E  0091               	movwf	??_isr+2
  1163  011F  3086               	movlw	134
  1164  0120  0090               	movwf	??_isr+1
  1165  0121  3099               	movlw	153
  1166  0122  008F               	movwf	??_isr
  1167  0123                     u108_27:	
  1168  0123  0B8F               	decfsz	??_isr,f
  1169  0124  2923               	goto	u108_27
  1170  0125  0B90               	decfsz	??_isr+1,f
  1171  0126  2923               	goto	u108_27
  1172  0127  0B91               	decfsz	??_isr+2,f
  1173  0128  2923               	goto	u108_27
  1174  0129  2956               	goto	i1l1156
  1175  012A                     i1l138:	
  1176                           ;electronic_drawer_lock.c: 262: }
  1177                           ;electronic_drawer_lock.c: 264: }
  1178                           
  1179                           ;electronic_drawer_lock.c: 261: RA1 = !0b1;
  1180                           
  1181                           
  1182                           ;electronic_drawer_lock.c: 268: else if(!open)
  1183  012A  192B               	btfsc	_open/(0+8),_open& (0+7)	;volatile
  1184  012B  2958               	goto	i1l1158
  1185                           
  1186                           ;electronic_drawer_lock.c: 269: {
  1187                           ;electronic_drawer_lock.c: 270: if(!wrong)
  1188  012C  1A2B               	btfsc	_wrong/(0+8),_wrong& (0+7)	;volatile
  1189  012D  2949               	goto	i1l142
  1190                           
  1191                           ;electronic_drawer_lock.c: 271: {
  1192                           ;electronic_drawer_lock.c: 272: digits_entered++;
  1193  012E  3001               	movlw	1
  1194  012F  008F               	movwf	??_isr
  1195  0130  080F               	movf	??_isr,w
  1196  0131  079E               	addwf	_digits_entered,f	;volatile
  1197                           
  1198                           ;electronic_drawer_lock.c: 273: read_digit = eeprom_read(digits_entered);
  1199  0132  081E               	movf	_digits_entered,w	;volatile
  1200  0133  21FA               	fcall	i1_eeprom_read
  1201  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1202  0135  008F               	movwf	??_isr
  1203  0136  080F               	movf	??_isr,w
  1204  0137  00A1               	movwf	_read_digit	;volatile
  1205                           
  1206                           ;electronic_drawer_lock.c: 276: if(read_digit != digit)
  1207  0138  0821               	movf	_read_digit,w	;volatile
  1208  0139  061D               	xorwf	_digit,w	;volatile
  1209  013A  1903               	skipnz
  1210  013B  2949               	goto	i1l142
  1211                           
  1212                           ;electronic_drawer_lock.c: 277: {
  1213                           ;electronic_drawer_lock.c: 279: if(digits_entered > 8 || digit != master_key[digits_ente
      +                          red - 1])
  1214  013C  3009               	movlw	9
  1215  013D  021E               	subwf	_digits_entered,w	;volatile
  1216  013E  1803               	skipnc
  1217  013F  2948               	goto	i1l146
  1218  0140  081E               	movf	_digits_entered,w
  1219  0141  3EFF               	addlw	255
  1220  0142  3E23               	addlw	(low (_master_key| 0))& (0+255)
  1221  0143  0084               	movwf	4
  1222  0144  1383               	bcf	3,7	;select IRP bank0
  1223  0145  0800               	movf	0,w
  1224  0146  061D               	xorwf	_digit,w	;volatile
  1225  0147  1D03               	btfss	3,2
  1226  0148                     i1l146:	
  1227                           
  1228                           ;electronic_drawer_lock.c: 280: wrong = 0b1;
  1229  0148  162B               	bsf	_wrong/(0+8),_wrong& (0+7)	;volatile
  1230  0149                     i1l142:	
  1231                           
  1232                           ;electronic_drawer_lock.c: 281: }
  1233                           ;electronic_drawer_lock.c: 282: }
  1234                           ;electronic_drawer_lock.c: 283: RA1 = 0b1;
  1235  0149  1485               	bsf	5,1	;volatile
  1236                           
  1237                           ;electronic_drawer_lock.c: 284: _delay((unsigned long)((300)*(4000000/4000.0)));
  1238  014A  3002               	movlw	2
  1239  014B  0091               	movwf	??_isr+2
  1240  014C  3086               	movlw	134
  1241  014D  0090               	movwf	??_isr+1
  1242  014E  3099               	movlw	153
  1243  014F  008F               	movwf	??_isr
  1244  0150                     u109_27:	
  1245  0150  0B8F               	decfsz	??_isr,f
  1246  0151  2950               	goto	u109_27
  1247  0152  0B90               	decfsz	??_isr+1,f
  1248  0153  2950               	goto	u109_27
  1249  0154  0B91               	decfsz	??_isr+2,f
  1250  0155  2950               	goto	u109_27
  1251  0156                     i1l1156:	
  1252                           
  1253                           ;electronic_drawer_lock.c: 285: RA1 = !0b1;
  1254  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1255  0157  1085               	bcf	5,1	;volatile
  1256  0158                     i1l1158:	
  1257                           
  1258                           ;electronic_drawer_lock.c: 286: }
  1259                           ;electronic_drawer_lock.c: 287: }
  1260                           ;electronic_drawer_lock.c: 288: RBIF = 0b0;
  1261  0158  100B               	bcf	11,0	;volatile
  1262  0159                     i1l1160:	
  1263                           
  1264                           ;electronic_drawer_lock.c: 289: }
  1265                           ;electronic_drawer_lock.c: 290: if(EEIE)
  1266  0159  1F0B               	btfss	11,6	;volatile
  1267  015A  295E               	goto	i1l96
  1268                           
  1269                           ;electronic_drawer_lock.c: 291: {
  1270                           ;electronic_drawer_lock.c: 292: RA1 = !0b1;
  1271  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1272  015C  1085               	bcf	5,1	;volatile
  1273                           
  1274                           ;electronic_drawer_lock.c: 293: EEIE = 0b0;
  1275  015D  130B               	bcf	11,6	;volatile
  1276  015E                     i1l96:	
  1277  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1278  015F  0815               	movf	??_isr+6,w
  1279  0160  00CF               	movwf	79
  1280  0161  0814               	movf	??_isr+5,w
  1281  0162  008A               	movwf	10
  1282  0163  0813               	movf	??_isr+4,w
  1283  0164  0084               	movwf	4
  1284  0165  0E12               	swapf	(??_isr+3)^0,w
  1285  0166  0083               	movwf	3
  1286  0167  0ECE               	swapf	78,f
  1287  0168  0E4E               	swapf	78,w
  1288  0169  0009               	retfie
  1289  016A                     __end_of_isr:	
  1290                           
  1291                           	psect	intentry
  1292  0004                     __pintentry:	
  1293                           ;incstack = 0
  1294                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1295                           
  1296  0004                     interrupt_function:	
  1297  004E                     saved_w	set	btemp
  1298  0004  00CE               	movwf	btemp
  1299  0005  0E03               	swapf	3,w
  1300  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1301  0007  0092               	movwf	??_isr+3
  1302  0008  0804               	movf	4,w
  1303  0009  0093               	movwf	??_isr+4
  1304  000A  080A               	movf	10,w
  1305  000B  0094               	movwf	??_isr+5
  1306  000C  084F               	movf	btemp+1,w
  1307  000D  0095               	movwf	??_isr+6
  1308  000E  282B               	ljmp	_isr
  1309                           
  1310                           	psect	text3
  1311  01FA                     __ptext3:	
  1312 ;; *************** function i1_eeprom_read *****************
  1313 ;; Defined at:
  1314 ;;		line 6 in file "/opt/microchip/xc8/v1.36/sources/pic/eeread.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;  addr            1    wreg     unsigned char 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  addr            1    1[BANK0 ] unsigned char 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      unsigned char 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2, status,0
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0
  1328 ;;      Params:         0       0
  1329 ;;      Locals:         0       1
  1330 ;;      Temps:          0       1
  1331 ;;      Totals:         0       2
  1332 ;;Total ram usage:        2 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_isr
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function i1_eeprom_read
  1343  01FA                     i1_eeprom_read:	
  1344                           
  1345                           ;incstack = 0
  1346                           ; Regs used in i1_eeprom_read: [wreg+status,2+status,0]
  1347                           ;i1eeprom_read@addr stored from wreg
  1348  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1349  01FB  008D               	movwf	i1eeprom_read@addr
  1350  01FC                     i1l178:	
  1351  01FC  0064               	clrwdt	;# 
  1352  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  1353  01FE  1888               	btfsc	8,1	;volsfr
  1354  01FF  29FC               	goto	i1l178
  1355  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0201  080D               	movf	i1eeprom_read@addr,w
  1357  0202  0089               	movwf	9	;volatile
  1358  0203  303F               	movlw	63
  1359  0204  008C               	movwf	??i1_eeprom_read
  1360  0205  080C               	movf	??i1_eeprom_read,w
  1361  0206  1683               	bsf	3,5	;RP0=1, select bank1
  1362  0207  0588               	andwf	8,f	;volsfr
  1363  0208  1408               	bsf	8,0	;volsfr
  1364  0209  1003               	clrc
  1365  020A  1808               	btfsc	8,0	;volsfr
  1366  020B  1403               	setc
  1367  020C  3000               	movlw	0
  1368  020D  1803               	skipnc
  1369  020E  3001               	movlw	1
  1370  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1371  0210  0808               	movf	8,w	;volatile
  1372  0211  0008               	return
  1373  0212                     __end_ofi1_eeprom_read:	
  1374                           
  1375                           	psect	text4
  1376  01C1                     __ptext4:	
  1377 ;; *************** function _eeprom_write *****************
  1378 ;; Defined at:
  1379 ;;		line 6 in file "/opt/microchip/xc8/v1.36/sources/pic/eewrite.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  addr            1    wreg     unsigned char 
  1382 ;;  value           1    0[BANK0 ] unsigned char 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  addr            1    2[BANK0 ] unsigned char 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2, status,0
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0
  1394 ;;      Params:         0       1
  1395 ;;      Locals:         0       1
  1396 ;;      Temps:          0       1
  1397 ;;      Totals:         0       3
  1398 ;;Total ram usage:        3 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_isr
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           
  1408                           ;psect for function _eeprom_write
  1409  01C1                     _eeprom_write:	
  1410                           
  1411                           ;incstack = 0
  1412                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  1413                           ;eeprom_write@addr stored from wreg
  1414  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1415  01C2  008E               	movwf	eeprom_write@addr
  1416  01C3                     i1l200:	
  1417  01C3  1683               	bsf	3,5	;RP0=1, select bank1
  1418  01C4  1888               	btfsc	8,1	;volsfr
  1419  01C5  29C3               	goto	i1l200
  1420  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1421  01C7  080E               	movf	eeprom_write@addr,w
  1422  01C8  0089               	movwf	9	;volatile
  1423  01C9  080C               	movf	eeprom_write@value,w
  1424  01CA  0088               	movwf	8	;volatile
  1425  01CB  303F               	movlw	63
  1426  01CC  008D               	movwf	??_eeprom_write
  1427  01CD  080D               	movf	??_eeprom_write,w
  1428  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  1429  01CF  0588               	andwf	8,f	;volsfr
  1430  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1431  01D1  1003               	bcf	3,0	;volatile
  1432  01D2  1B8B               	btfsc	11,7	;volatile
  1433  01D3  1403               	bsf	3,0	;volatile
  1434  01D4  138B               	bcf	11,7	;volatile
  1435  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  1436  01D6  1508               	bsf	8,2	;volsfr
  1437  01D7  3055               	movlw	85
  1438  01D8  0089               	movwf	9	;volsfr
  1439  01D9  30AA               	movlw	170
  1440  01DA  0089               	movwf	9	;volsfr
  1441  01DB  1488               	bsf	8,1	;volsfr
  1442  01DC  1108               	bcf	8,2	;volsfr
  1443  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1444  01DE  1C03               	btfss	3,0	;volatile
  1445  01DF  0008               	return
  1446  01E0  178B               	bsf	11,7	;volatile
  1447  01E1  0008               	return
  1448  01E2                     __end_of_eeprom_write:	
  1449  004E                     btemp	set	78	;btemp
  1450  004E                     wtemp	set	78
  1451  004E                     wtemp0	set	78
  1452  0050                     wtemp1	set	80
  1453  0052                     wtemp2	set	82
  1454  0054                     wtemp3	set	84
  1455  0056                     wtemp4	set	86
  1456  0058                     wtemp5	set	88
  1457  004F                     wtemp6	set	79
  1458  004E                     ttemp	set	78
  1459  004E                     ttemp0	set	78
  1460  0051                     ttemp1	set	81
  1461  0054                     ttemp2	set	84
  1462  0057                     ttemp3	set	87
  1463  004F                     ttemp4	set	79
  1464  004E                     ltemp	set	78
  1465  004E                     ltemp0	set	78
  1466  0052                     ltemp1	set	82
  1467  0056                     ltemp2	set	86
  1468  0050                     ltemp3	set	80


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         8
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66     15      33

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_eeprom_read

Critical Paths under _isr in BANK0

    _isr->_eeprom_write

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      22
                                             12 BANK0      3     3      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          2     2      0      22
                                             10 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  7     7      0     225
                                              3 BANK0      7     7      0
                       _eeprom_write
                      i1_eeprom_read
 ---------------------------------------------------------------------------------
 (3) i1_eeprom_read                                        2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1     203
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _eeprom_read

 _isr (ROOT)
   _eeprom_write
   i1_eeprom_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               42      F      21       3       50.0%
BITBANK0            42      0       1       5        1.5%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21       6        0.0%
ABS                  0      0      21       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              40      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun Apr 24 08:24:04 2016

             __CFG_CP$ON 0000                       _RD 0440                       _WR 0441  
                    l151 01A5                      l160 01BD                      l154 01AD  
                    l157 01B5                      l178 01E4                      _GIE 005F  
                    _RA0 0028                      _RA1 0029                      _RB0 0030  
                    _RA2 002A                      _RB1 0031                      _RA3 002B  
                    _RB2 0032                      _RA4 002C                      _RB3 0033  
                    _RB4 0034                      _RB5 0035                      _RB6 0036  
                    _isr 002B                      fsr0 0004                      indf 0000  
           __CFG_FOSC$HS 0000                     l1216 01A0                     ?_isr 000C  
                   _EEIE 005E                     _T0IF 005A                     u1057 0193  
                   _RBIF 0058                     i1l91 004F                     i1l95 007D  
                   i1l96 015E                     i1l88 0049                     i1l97 00B7  
                   i1l98 0084                     _WREN 0442           ??_eeprom_write 000D  
                   _main 016A                     _open 015A                     btemp 004E  
                   ltemp 004E                     start 000F                     ttemp 004E  
                   wtemp 004E                    ??_isr 000F         _last_pres_time_h 001F  
       _last_pres_time_l 0020                    ?_main 000C                    _EEADR 0009  
          __CFG_WDTE$OFF 0000                    _CARRY 0018                    i1l100 0088  
                  i1l110 00CA                    i1l102 008C                    i1l111 00BE  
                  i1l200 01C3                    i1l120 00D1                    i1l113 00C2  
                  i1l122 00D5                    i1l115 00C6                    i1l124 00DC  
                  i1l142 0149                    i1l134 00F0                    i1l119 00FD  
                  i1l128 00E6                    i1l146 0148                    i1l138 012A  
                  i1l178 01FC                    i1l992 0043                    i1l986 003B  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086            __CFG_PWRTE$ON 0000                    _digit 001D  
                  _wrong 015C                    pclath 000A                    ltemp0 004E  
                  ltemp1 0052                    ltemp2 0056                    ltemp3 0050  
                  ttemp0 004E                    ttemp1 0051                    ttemp2 0054  
                  ttemp3 0057                    ttemp4 004F                    status 0003  
                  wtemp0 004E                    wtemp1 0050                    wtemp2 0052  
                  wtemp3 0054                    wtemp4 0056                    wtemp5 0058  
                  wtemp6 004F          __initialization 0010             __end_of_main 01C1  
                 ??_main 0018   __size_ofi1_eeprom_read 0018                   _EEDATA 0008  
                 _EECON1 0088                   _EECON2 0089                   i1l1000 0056  
                 i1l1022 0067                   i1l1112 00F6                   i1l1116 00F8  
                 i1l1052 0097                   i1l1124 0100                   i1l1118 00F9  
                 i1l1064 00A7                   i1l1160 0159                   i1l1156 0156  
                 i1l1158 0158                   u106_27 006E                   u107_27 00AE  
                 u108_27 0123                   u109_27 0150                   _INTCON 000B  
   __size_of_eeprom_read 0018     __end_of_eeprom_write 01E2                   saved_w 004E  
__end_of__initialization 0029          eeprom_read@addr 0017            i1_eeprom_read 01FA  
           __pidataBANK0 0212        eeprom_write@value 000C               __pbssBANK0 001B  
         ?i1_eeprom_read 000C               __pmaintext 016A               __pintentry 0004  
  __size_of_eeprom_write 0021               _read_digit 0021               _master_key 0023  
                __ptext1 01E2                  __ptext2 002B                  __ptext3 01FA  
                __ptext4 01C1             __size_of_isr 013F     end_of_initialization 0029  
        ??i1_eeprom_read 000C             _eeprom_write 01C1               _w_led_time 0022  
          ??_eeprom_read 0016           _digits_entered 001E            __pbitbssBANK0 0158  
    start_initialization 0010              __end_of_isr 016A      __end_of_eeprom_read 01FA  
            __pdataBANK0 0023                ___latbits 0000            __pcstackBANK0 000C  
            _ch_pres_cnt 001C         eeprom_write@addr 000E                __pnvBANK0 002C  
            _digit_count 002C        interrupt_function 0004              _eeprom_read 01E2  
  __end_ofi1_eeprom_read 0212                 _changing 0159        i1eeprom_read@addr 000D  
               _but_pres 0158                 _buz_time 001B            __size_of_main 0057  
               _sleeping 015B                 intlevel1 0000               _OPTION_REG 0081  
          ?_eeprom_write 000C             ?_eeprom_read 000C  
